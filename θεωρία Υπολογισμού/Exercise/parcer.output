Terminals unused in grammar

    KW_scalar
    KW_True
    KW_False
    KW_else
    KW_endif
    KW_for
    KW_in
    KW_endfor
    KW_while
    KW_endwhile
    KW_break
    KW_continue
    KW_not
    KW_and
    KW_or
    KW_com
    KW_endcomp
    KW_of
    T_FLOAT
    OP_DIV
    OP_MOD
    OP_EXP
    OP_EQ
    OP_NOTEQ
    OP_LEQ
    OP_GEQ
    OP_INCREM
    OP_DECREM
    OP_MULCREM
    OP_DIVCREM
    OP_MODCREM
    DEL_LBRAC
    DEL_RBRAC
    DEL_DOT
    COMM_STR
    NEW_LINE
    '*'
    '/'


Grammar

    0 $accept: program_start $end

    1 program_start: ε
    2              | program_body

    3 program_body: full_expression DEL_QUEST
    4             | program_body full_expression DEL_QUEST
    5             | program_body full_expression KW_enddef DEL_QUEST
    6             | program_body make_fcn DEL_QUEST

    7 full_expression: constant
    8                | declaration
    9                | assignment
   10                | fcn_call
   11                | if_statement

   12 constant: KW_const assignment var_type

   13 assignment: expression OP_EQUAL kati

   14 kati: expression
   15     | fcn_call
   16     | operators
   17     | kati expression
   18     | kati operators fcn_call

   19 declaration: expression var_type
   20            | expression DEL_COMMA expression
   21            | declaration DEL_COMMA expression
   22            | declaration var_type

   23 var_type: DEL_DOTS KW_str
   24         | DEL_DOTS KW_integer
   25         | DEL_DOTS T_ID
   26         | DEL_DOTS KW_boolean

   27 fcn_call: expression DEL_LPAR DEL_RPAR
   28         | DEL_LPAR one_liner DEL_RPAR
   29         | expression DEL_LPAR expression DEL_RPAR
   30         | expression DEL_LPAR operators expression DEL_RPAR
   31         | expression DEL_LPAR one_liner DEL_RPAR
   32         | expression DEL_LPAR operators one_liner DEL_RPAR

   33 one_liner: expression operators
   34          | expression DEL_COMMA
   35          | one_liner DEL_COMMA expression
   36          | one_liner expression
   37          | one_liner expression operators

   38 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   39         | KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   40         | KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef

   41 fcn_arguments: declaration
   42              | fcn_arguments declaration

   43 fcn_ret_type: OP_MINUS OP_GREATER KW_integer DEL_DOTS
   44             | OP_MINUS OP_GREATER KW_boolean DEL_DOTS

   45 fcn_body: assignment DEL_QUEST
   46         | declaration DEL_QUEST
   47         | fcn_call DEL_QUEST
   48         | if_statement DEL_QUEST
   49         | KW_return one_liner DEL_QUEST
   50         | fcn_body assignment DEL_QUEST
   51         | fcn_body fcn_call DEL_QUEST
   52         | fcn_body declaration DEL_QUEST
   53         | fcn_body if_statement DEL_QUEST
   54         | fcn_body KW_return expression DEL_QUEST
   55         | fcn_body KW_return one_liner DEL_QUEST

   56 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS

   57 expression: T_ID
   58           | T_INT
   59           | T_STRING
   60           | KW_return
   61           | KW_main

   62 operators: OP_MINUS
   63          | OP_PLUS
   64          | OP_MUL
   65          | OP_EQUAL
   66          | OP_LESS


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '/' (47)
    error (256)
    T_ID <str> (258) 25 57
    KW_integer (259) 24 43
    KW_scalar (260)
    KW_str (261) 23
    KW_boolean (262) 26 44
    KW_True (263)
    KW_False (264)
    KW_const (265) 12
    KW_if (266) 56
    KW_else (267)
    KW_endif (268)
    KW_for (269)
    KW_in (270)
    KW_endfor (271)
    KW_while (272)
    KW_endwhile (273)
    KW_break (274)
    KW_continue (275)
    KW_not (276)
    KW_and (277)
    KW_or (278)
    KW_def (279) 38 39 40
    KW_enddef (280) 5 38 39 40
    KW_main (281) 61
    KW_return (282) 49 54 55 60
    KW_com (283)
    KW_endcomp (284)
    KW_of (285)
    T_INT <str> (286) 58
    T_FLOAT <str> (287)
    T_STRING <str> (288) 59
    OP_PLUS (289) 63
    OP_MINUS <str> (290) 43 44 62
    OP_MUL (291) 64
    OP_DIV (292)
    OP_MOD (293)
    OP_EXP (294)
    OP_EQ (295)
    OP_NOTEQ (296)
    OP_LESS (297) 66
    OP_LEQ (298)
    OP_GREATER (299) 43 44
    OP_GEQ (300)
    OP_EQUAL <str> (301) 13 65
    OP_INCREM (302)
    OP_DECREM (303)
    OP_MULCREM (304)
    OP_DIVCREM (305)
    OP_MODCREM (306)
    DEL_QUEST (307) 3 4 5 6 45 46 47 48 49 50 51 52 53 54 55
    DEL_LPAR (308) 27 28 29 30 31 32 38 39 40 56
    DEL_RPAR (309) 27 28 29 30 31 32 38 39 40 56
    DEL_COMMA (310) 20 21 34 35
    DEL_LBRAC (311)
    DEL_RBRAC (312)
    DEL_DOTS (313) 23 24 25 26 38 43 44 56
    DEL_DOT (314)
    COMM_STR (315)
    NEW_LINE (316)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program_start (65)
        on left: 1 2
        on right: 0
    program_body <str> (66)
        on left: 3 4 5 6
        on right: 2 4 5 6
    full_expression <str> (67)
        on left: 7 8 9 10 11
        on right: 3 4 5
    constant <str> (68)
        on left: 12
        on right: 7
    assignment <str> (69)
        on left: 13
        on right: 9 12 45 50
    kati <str> (70)
        on left: 14 15 16 17 18
        on right: 13 17 18
    declaration <str> (71)
        on left: 19 20 21 22
        on right: 8 21 22 41 42 46 52
    var_type <str> (72)
        on left: 23 24 25 26
        on right: 12 19 22
    fcn_call <str> (73)
        on left: 27 28 29 30 31 32
        on right: 10 15 18 47 51
    one_liner <str> (74)
        on left: 33 34 35 36 37
        on right: 28 31 32 35 36 37 49 55 56
    make_fcn <str> (75)
        on left: 38 39 40
        on right: 6
    fcn_arguments <str> (76)
        on left: 41 42
        on right: 40 42
    fcn_ret_type <str> (77)
        on left: 43 44
        on right: 39 40
    fcn_body <str> (78)
        on left: 45 46 47 48 49 50 51 52 53 54 55
        on right: 38 39 40 50 51 52 53 54 55
    if_statement <str> (79)
        on left: 56
        on right: 11 48 53
    expression <str> (80)
        on left: 57 58 59 60 61
        on right: 13 14 17 19 20 21 27 29 30 31 32 33 34 35 36 37 38 39 40 54
    operators <str> (81)
        on left: 62 63 64 65 66
        on right: 16 18 30 32 33 37


State 0

    0 $accept: • program_start $end
    1 program_start: ε •  [$end]
    2              | • program_body
    3 program_body: • full_expression DEL_QUEST
    4             | • program_body full_expression DEL_QUEST
    5             | • program_body full_expression KW_enddef DEL_QUEST
    6             | • program_body make_fcn DEL_QUEST
    7 full_expression: • constant
    8                | • declaration
    9                | • assignment
   10                | • fcn_call
   11                | • if_statement
   12 constant: • KW_const assignment var_type
   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_const   shift, and go to state 2
    KW_if      shift, and go to state 3
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    $default  reduce using rule 1 (program_start)

    program_start    go to state 9
    program_body     go to state 10
    full_expression  go to state 11
    constant         go to state 12
    assignment       go to state 13
    declaration      go to state 14
    fcn_call         go to state 15
    if_statement     go to state 16
    expression       go to state 17


State 1

   57 expression: T_ID •

    $default  reduce using rule 57 (expression)


State 2

   12 constant: KW_const • assignment var_type
   13 assignment: • expression OP_EQUAL kati
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    assignment  go to state 18
    expression  go to state 19


State 3

   56 if_statement: KW_if • DEL_LPAR one_liner DEL_RPAR DEL_DOTS

    DEL_LPAR  shift, and go to state 20


State 4

   61 expression: KW_main •

    $default  reduce using rule 61 (expression)


State 5

   60 expression: KW_return •

    $default  reduce using rule 60 (expression)


State 6

   58 expression: T_INT •

    $default  reduce using rule 58 (expression)


State 7

   59 expression: T_STRING •

    $default  reduce using rule 59 (expression)


State 8

   28 fcn_call: DEL_LPAR • one_liner DEL_RPAR
   33 one_liner: • expression operators
   34          | • expression DEL_COMMA
   35          | • one_liner DEL_COMMA expression
   36          | • one_liner expression
   37          | • one_liner expression operators
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    one_liner   go to state 21
    expression  go to state 22


State 9

    0 $accept: program_start • $end

    $end  shift, and go to state 23


State 10

    2 program_start: program_body •  [$end]
    4 program_body: program_body • full_expression DEL_QUEST
    5             | program_body • full_expression KW_enddef DEL_QUEST
    6             | program_body • make_fcn DEL_QUEST
    7 full_expression: • constant
    8                | • declaration
    9                | • assignment
   10                | • fcn_call
   11                | • if_statement
   12 constant: • KW_const assignment var_type
   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   38 make_fcn: • KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   39         | • KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   40         | • KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_const   shift, and go to state 2
    KW_if      shift, and go to state 3
    KW_def     shift, and go to state 24
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    $default  reduce using rule 2 (program_start)

    full_expression  go to state 25
    constant         go to state 12
    assignment       go to state 13
    declaration      go to state 14
    fcn_call         go to state 15
    make_fcn         go to state 26
    if_statement     go to state 16
    expression       go to state 17


State 11

    3 program_body: full_expression • DEL_QUEST

    DEL_QUEST  shift, and go to state 27


State 12

    7 full_expression: constant •

    $default  reduce using rule 7 (full_expression)


State 13

    9 full_expression: assignment •

    $default  reduce using rule 9 (full_expression)


State 14

    8 full_expression: declaration •  [KW_enddef, DEL_QUEST]
   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean

    DEL_COMMA  shift, and go to state 28
    DEL_DOTS   shift, and go to state 29

    $default  reduce using rule 8 (full_expression)

    var_type  go to state 30


State 15

   10 full_expression: fcn_call •

    $default  reduce using rule 10 (full_expression)


State 16

   11 full_expression: if_statement •

    $default  reduce using rule 11 (full_expression)


State 17

   13 assignment: expression • OP_EQUAL kati
   19 declaration: expression • var_type
   20            | expression • DEL_COMMA expression
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   27 fcn_call: expression • DEL_LPAR DEL_RPAR
   29         | expression • DEL_LPAR expression DEL_RPAR
   30         | expression • DEL_LPAR operators expression DEL_RPAR
   31         | expression • DEL_LPAR one_liner DEL_RPAR
   32         | expression • DEL_LPAR operators one_liner DEL_RPAR

    OP_EQUAL   shift, and go to state 31
    DEL_LPAR   shift, and go to state 32
    DEL_COMMA  shift, and go to state 33
    DEL_DOTS   shift, and go to state 29

    var_type  go to state 34


State 18

   12 constant: KW_const assignment • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean

    DEL_DOTS  shift, and go to state 29

    var_type  go to state 35


State 19

   13 assignment: expression • OP_EQUAL kati

    OP_EQUAL  shift, and go to state 31


State 20

   33 one_liner: • expression operators
   34          | • expression DEL_COMMA
   35          | • one_liner DEL_COMMA expression
   36          | • one_liner expression
   37          | • one_liner expression operators
   56 if_statement: KW_if DEL_LPAR • one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    one_liner   go to state 36
    expression  go to state 22


State 21

   28 fcn_call: DEL_LPAR one_liner • DEL_RPAR
   35 one_liner: one_liner • DEL_COMMA expression
   36          | one_liner • expression
   37          | one_liner • expression operators
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_RPAR   shift, and go to state 37
    DEL_COMMA  shift, and go to state 38

    expression  go to state 39


State 22

   33 one_liner: expression • operators
   34          | expression • DEL_COMMA
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    OP_PLUS    shift, and go to state 40
    OP_MINUS   shift, and go to state 41
    OP_MUL     shift, and go to state 42
    OP_LESS    shift, and go to state 43
    OP_EQUAL   shift, and go to state 44
    DEL_COMMA  shift, and go to state 45

    operators  go to state 46


State 23

    0 $accept: program_start $end •

    $default  accept


State 24

   38 make_fcn: KW_def • expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   39         | KW_def • expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   40         | KW_def • expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    expression  go to state 47


State 25

    4 program_body: program_body full_expression • DEL_QUEST
    5             | program_body full_expression • KW_enddef DEL_QUEST

    KW_enddef  shift, and go to state 48
    DEL_QUEST  shift, and go to state 49


State 26

    6 program_body: program_body make_fcn • DEL_QUEST

    DEL_QUEST  shift, and go to state 50


State 27

    3 program_body: full_expression DEL_QUEST •

    $default  reduce using rule 3 (program_body)


State 28

   21 declaration: declaration DEL_COMMA • expression
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    expression  go to state 51


State 29

   23 var_type: DEL_DOTS • KW_str
   24         | DEL_DOTS • KW_integer
   25         | DEL_DOTS • T_ID
   26         | DEL_DOTS • KW_boolean

    T_ID        shift, and go to state 52
    KW_integer  shift, and go to state 53
    KW_str      shift, and go to state 54
    KW_boolean  shift, and go to state 55


State 30

   22 declaration: declaration var_type •

    $default  reduce using rule 22 (declaration)


State 31

   13 assignment: expression OP_EQUAL • kati
   14 kati: • expression
   15     | • fcn_call
   16     | • operators
   17     | • kati expression
   18     | • kati operators fcn_call
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    OP_PLUS    shift, and go to state 40
    OP_MINUS   shift, and go to state 41
    OP_MUL     shift, and go to state 42
    OP_LESS    shift, and go to state 43
    OP_EQUAL   shift, and go to state 44
    DEL_LPAR   shift, and go to state 8

    kati        go to state 56
    fcn_call    go to state 57
    expression  go to state 58
    operators   go to state 59


State 32

   27 fcn_call: expression DEL_LPAR • DEL_RPAR
   29         | expression DEL_LPAR • expression DEL_RPAR
   30         | expression DEL_LPAR • operators expression DEL_RPAR
   31         | expression DEL_LPAR • one_liner DEL_RPAR
   32         | expression DEL_LPAR • operators one_liner DEL_RPAR
   33 one_liner: • expression operators
   34          | • expression DEL_COMMA
   35          | • one_liner DEL_COMMA expression
   36          | • one_liner expression
   37          | • one_liner expression operators
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    OP_PLUS    shift, and go to state 40
    OP_MINUS   shift, and go to state 41
    OP_MUL     shift, and go to state 42
    OP_LESS    shift, and go to state 43
    OP_EQUAL   shift, and go to state 44
    DEL_RPAR   shift, and go to state 60

    one_liner   go to state 61
    expression  go to state 62
    operators   go to state 63


State 33

   20 declaration: expression DEL_COMMA • expression
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    expression  go to state 64


State 34

   19 declaration: expression var_type •

    $default  reduce using rule 19 (declaration)


State 35

   12 constant: KW_const assignment var_type •

    $default  reduce using rule 12 (constant)


State 36

   35 one_liner: one_liner • DEL_COMMA expression
   36          | one_liner • expression
   37          | one_liner • expression operators
   56 if_statement: KW_if DEL_LPAR one_liner • DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_RPAR   shift, and go to state 65
    DEL_COMMA  shift, and go to state 38

    expression  go to state 39


State 37

   28 fcn_call: DEL_LPAR one_liner DEL_RPAR •

    $default  reduce using rule 28 (fcn_call)


State 38

   35 one_liner: one_liner DEL_COMMA • expression
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    expression  go to state 66


State 39

   36 one_liner: one_liner expression •  [T_ID, KW_main, KW_return, T_INT, T_STRING, DEL_QUEST, DEL_RPAR, DEL_COMMA]
   37          | one_liner expression • operators
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    OP_PLUS   shift, and go to state 40
    OP_MINUS  shift, and go to state 41
    OP_MUL    shift, and go to state 42
    OP_LESS   shift, and go to state 43
    OP_EQUAL  shift, and go to state 44

    $default  reduce using rule 36 (one_liner)

    operators  go to state 67


State 40

   63 operators: OP_PLUS •

    $default  reduce using rule 63 (operators)


State 41

   62 operators: OP_MINUS •

    $default  reduce using rule 62 (operators)


State 42

   64 operators: OP_MUL •

    $default  reduce using rule 64 (operators)


State 43

   66 operators: OP_LESS •

    $default  reduce using rule 66 (operators)


State 44

   65 operators: OP_EQUAL •

    $default  reduce using rule 65 (operators)


State 45

   34 one_liner: expression DEL_COMMA •

    $default  reduce using rule 34 (one_liner)


State 46

   33 one_liner: expression operators •

    $default  reduce using rule 33 (one_liner)


State 47

   38 make_fcn: KW_def expression • DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   39         | KW_def expression • DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   40         | KW_def expression • DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef

    DEL_LPAR  shift, and go to state 68


State 48

    5 program_body: program_body full_expression KW_enddef • DEL_QUEST

    DEL_QUEST  shift, and go to state 69


State 49

    4 program_body: program_body full_expression DEL_QUEST •

    $default  reduce using rule 4 (program_body)


State 50

    6 program_body: program_body make_fcn DEL_QUEST •

    $default  reduce using rule 6 (program_body)


State 51

   21 declaration: declaration DEL_COMMA expression •

    $default  reduce using rule 21 (declaration)


State 52

   25 var_type: DEL_DOTS T_ID •

    $default  reduce using rule 25 (var_type)


State 53

   24 var_type: DEL_DOTS KW_integer •

    $default  reduce using rule 24 (var_type)


State 54

   23 var_type: DEL_DOTS KW_str •

    $default  reduce using rule 23 (var_type)


State 55

   26 var_type: DEL_DOTS KW_boolean •

    $default  reduce using rule 26 (var_type)


State 56

   13 assignment: expression OP_EQUAL kati •  [KW_enddef, DEL_QUEST, DEL_DOTS]
   17 kati: kati • expression
   18     | kati • operators fcn_call
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    OP_PLUS    shift, and go to state 40
    OP_MINUS   shift, and go to state 41
    OP_MUL     shift, and go to state 42
    OP_LESS    shift, and go to state 43
    OP_EQUAL   shift, and go to state 44

    $default  reduce using rule 13 (assignment)

    expression  go to state 70
    operators   go to state 71


State 57

   15 kati: fcn_call •

    $default  reduce using rule 15 (kati)


State 58

   14 kati: expression •  [T_ID, KW_enddef, KW_main, KW_return, T_INT, T_STRING, OP_PLUS, OP_MINUS, OP_MUL, OP_LESS, OP_EQUAL, DEL_QUEST, DEL_DOTS]
   27 fcn_call: expression • DEL_LPAR DEL_RPAR
   29         | expression • DEL_LPAR expression DEL_RPAR
   30         | expression • DEL_LPAR operators expression DEL_RPAR
   31         | expression • DEL_LPAR one_liner DEL_RPAR
   32         | expression • DEL_LPAR operators one_liner DEL_RPAR

    DEL_LPAR  shift, and go to state 32

    $default  reduce using rule 14 (kati)


State 59

   16 kati: operators •

    $default  reduce using rule 16 (kati)


State 60

   27 fcn_call: expression DEL_LPAR DEL_RPAR •

    $default  reduce using rule 27 (fcn_call)


State 61

   31 fcn_call: expression DEL_LPAR one_liner • DEL_RPAR
   35 one_liner: one_liner • DEL_COMMA expression
   36          | one_liner • expression
   37          | one_liner • expression operators
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_RPAR   shift, and go to state 72
    DEL_COMMA  shift, and go to state 38

    expression  go to state 39


State 62

   29 fcn_call: expression DEL_LPAR expression • DEL_RPAR
   33 one_liner: expression • operators
   34          | expression • DEL_COMMA
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    OP_PLUS    shift, and go to state 40
    OP_MINUS   shift, and go to state 41
    OP_MUL     shift, and go to state 42
    OP_LESS    shift, and go to state 43
    OP_EQUAL   shift, and go to state 44
    DEL_RPAR   shift, and go to state 73
    DEL_COMMA  shift, and go to state 45

    operators  go to state 46


State 63

   30 fcn_call: expression DEL_LPAR operators • expression DEL_RPAR
   32         | expression DEL_LPAR operators • one_liner DEL_RPAR
   33 one_liner: • expression operators
   34          | • expression DEL_COMMA
   35          | • one_liner DEL_COMMA expression
   36          | • one_liner expression
   37          | • one_liner expression operators
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    one_liner   go to state 74
    expression  go to state 75


State 64

   20 declaration: expression DEL_COMMA expression •

    $default  reduce using rule 20 (declaration)


State 65

   56 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR • DEL_DOTS

    DEL_DOTS  shift, and go to state 76


State 66

   35 one_liner: one_liner DEL_COMMA expression •

    $default  reduce using rule 35 (one_liner)


State 67

   37 one_liner: one_liner expression operators •

    $default  reduce using rule 37 (one_liner)


State 68

   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   38 make_fcn: KW_def expression DEL_LPAR • DEL_RPAR DEL_DOTS fcn_body KW_enddef
   39         | KW_def expression DEL_LPAR • DEL_RPAR fcn_ret_type fcn_body KW_enddef
   40         | KW_def expression DEL_LPAR • fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef
   41 fcn_arguments: • declaration
   42              | • fcn_arguments declaration
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_RPAR   shift, and go to state 77

    declaration    go to state 78
    fcn_arguments  go to state 79
    expression     go to state 80


State 69

    5 program_body: program_body full_expression KW_enddef DEL_QUEST •

    $default  reduce using rule 5 (program_body)


State 70

   17 kati: kati expression •

    $default  reduce using rule 17 (kati)


State 71

   18 kati: kati operators • fcn_call
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    fcn_call    go to state 81
    expression  go to state 82


State 72

   31 fcn_call: expression DEL_LPAR one_liner DEL_RPAR •

    $default  reduce using rule 31 (fcn_call)


State 73

   29 fcn_call: expression DEL_LPAR expression DEL_RPAR •

    $default  reduce using rule 29 (fcn_call)


State 74

   32 fcn_call: expression DEL_LPAR operators one_liner • DEL_RPAR
   35 one_liner: one_liner • DEL_COMMA expression
   36          | one_liner • expression
   37          | one_liner • expression operators
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_RPAR   shift, and go to state 83
    DEL_COMMA  shift, and go to state 38

    expression  go to state 39


State 75

   30 fcn_call: expression DEL_LPAR operators expression • DEL_RPAR
   33 one_liner: expression • operators
   34          | expression • DEL_COMMA
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    OP_PLUS    shift, and go to state 40
    OP_MINUS   shift, and go to state 41
    OP_MUL     shift, and go to state 42
    OP_LESS    shift, and go to state 43
    OP_EQUAL   shift, and go to state 44
    DEL_RPAR   shift, and go to state 84
    DEL_COMMA  shift, and go to state 45

    operators  go to state 46


State 76

   56 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS •

    $default  reduce using rule 56 (if_statement)


State 77

   38 make_fcn: KW_def expression DEL_LPAR DEL_RPAR • DEL_DOTS fcn_body KW_enddef
   39         | KW_def expression DEL_LPAR DEL_RPAR • fcn_ret_type fcn_body KW_enddef
   43 fcn_ret_type: • OP_MINUS OP_GREATER KW_integer DEL_DOTS
   44             | • OP_MINUS OP_GREATER KW_boolean DEL_DOTS

    OP_MINUS  shift, and go to state 85
    DEL_DOTS  shift, and go to state 86

    fcn_ret_type  go to state 87


State 78

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   41 fcn_arguments: declaration •  [T_ID, KW_main, KW_return, T_INT, T_STRING, DEL_RPAR]

    DEL_COMMA  shift, and go to state 28
    DEL_DOTS   shift, and go to state 29

    $default  reduce using rule 41 (fcn_arguments)

    var_type  go to state 30


State 79

   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   40 make_fcn: KW_def expression DEL_LPAR fcn_arguments • DEL_RPAR fcn_ret_type fcn_body KW_enddef
   42 fcn_arguments: fcn_arguments • declaration
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_RPAR   shift, and go to state 88

    declaration  go to state 89
    expression   go to state 80


State 80

   19 declaration: expression • var_type
   20            | expression • DEL_COMMA expression
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean

    DEL_COMMA  shift, and go to state 33
    DEL_DOTS   shift, and go to state 29

    var_type  go to state 34


State 81

   18 kati: kati operators fcn_call •

    $default  reduce using rule 18 (kati)


State 82

   27 fcn_call: expression • DEL_LPAR DEL_RPAR
   29         | expression • DEL_LPAR expression DEL_RPAR
   30         | expression • DEL_LPAR operators expression DEL_RPAR
   31         | expression • DEL_LPAR one_liner DEL_RPAR
   32         | expression • DEL_LPAR operators one_liner DEL_RPAR

    DEL_LPAR  shift, and go to state 32


State 83

   32 fcn_call: expression DEL_LPAR operators one_liner DEL_RPAR •

    $default  reduce using rule 32 (fcn_call)


State 84

   30 fcn_call: expression DEL_LPAR operators expression DEL_RPAR •

    $default  reduce using rule 30 (fcn_call)


State 85

   43 fcn_ret_type: OP_MINUS • OP_GREATER KW_integer DEL_DOTS
   44             | OP_MINUS • OP_GREATER KW_boolean DEL_DOTS

    OP_GREATER  shift, and go to state 90


State 86

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   38 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS • fcn_body KW_enddef
   45 fcn_body: • assignment DEL_QUEST
   46         | • declaration DEL_QUEST
   47         | • fcn_call DEL_QUEST
   48         | • if_statement DEL_QUEST
   49         | • KW_return one_liner DEL_QUEST
   50         | • fcn_body assignment DEL_QUEST
   51         | • fcn_body fcn_call DEL_QUEST
   52         | • fcn_body declaration DEL_QUEST
   53         | • fcn_body if_statement DEL_QUEST
   54         | • fcn_body KW_return expression DEL_QUEST
   55         | • fcn_body KW_return one_liner DEL_QUEST
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_if      shift, and go to state 3
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 91
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    assignment    go to state 92
    declaration   go to state 93
    fcn_call      go to state 94
    fcn_body      go to state 95
    if_statement  go to state 96
    expression    go to state 17


State 87

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   39 make_fcn: KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type • fcn_body KW_enddef
   45 fcn_body: • assignment DEL_QUEST
   46         | • declaration DEL_QUEST
   47         | • fcn_call DEL_QUEST
   48         | • if_statement DEL_QUEST
   49         | • KW_return one_liner DEL_QUEST
   50         | • fcn_body assignment DEL_QUEST
   51         | • fcn_body fcn_call DEL_QUEST
   52         | • fcn_body declaration DEL_QUEST
   53         | • fcn_body if_statement DEL_QUEST
   54         | • fcn_body KW_return expression DEL_QUEST
   55         | • fcn_body KW_return one_liner DEL_QUEST
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_if      shift, and go to state 3
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 91
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    assignment    go to state 92
    declaration   go to state 93
    fcn_call      go to state 94
    fcn_body      go to state 97
    if_statement  go to state 96
    expression    go to state 17


State 88

   40 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR • fcn_ret_type fcn_body KW_enddef
   43 fcn_ret_type: • OP_MINUS OP_GREATER KW_integer DEL_DOTS
   44             | • OP_MINUS OP_GREATER KW_boolean DEL_DOTS

    OP_MINUS  shift, and go to state 85

    fcn_ret_type  go to state 98


State 89

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   42 fcn_arguments: fcn_arguments declaration •  [T_ID, KW_main, KW_return, T_INT, T_STRING, DEL_RPAR]

    DEL_COMMA  shift, and go to state 28
    DEL_DOTS   shift, and go to state 29

    $default  reduce using rule 42 (fcn_arguments)

    var_type  go to state 30


State 90

   43 fcn_ret_type: OP_MINUS OP_GREATER • KW_integer DEL_DOTS
   44             | OP_MINUS OP_GREATER • KW_boolean DEL_DOTS

    KW_integer  shift, and go to state 99
    KW_boolean  shift, and go to state 100


State 91

   33 one_liner: • expression operators
   34          | • expression DEL_COMMA
   35          | • one_liner DEL_COMMA expression
   36          | • one_liner expression
   37          | • one_liner expression operators
   49 fcn_body: KW_return • one_liner DEL_QUEST
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   60           | KW_return •  [OP_EQUAL, DEL_LPAR, DEL_COMMA, DEL_DOTS]
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    $default  reduce using rule 60 (expression)

    one_liner   go to state 101
    expression  go to state 22


State 92

   45 fcn_body: assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 102


State 93

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   46 fcn_body: declaration • DEL_QUEST

    DEL_QUEST  shift, and go to state 103
    DEL_COMMA  shift, and go to state 28
    DEL_DOTS   shift, and go to state 29

    var_type  go to state 30


State 94

   47 fcn_body: fcn_call • DEL_QUEST

    DEL_QUEST  shift, and go to state 104


State 95

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   38 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body • KW_enddef
   50 fcn_body: fcn_body • assignment DEL_QUEST
   51         | fcn_body • fcn_call DEL_QUEST
   52         | fcn_body • declaration DEL_QUEST
   53         | fcn_body • if_statement DEL_QUEST
   54         | fcn_body • KW_return expression DEL_QUEST
   55         | fcn_body • KW_return one_liner DEL_QUEST
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_if      shift, and go to state 3
    KW_enddef  shift, and go to state 105
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 106
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    assignment    go to state 107
    declaration   go to state 108
    fcn_call      go to state 109
    if_statement  go to state 110
    expression    go to state 17


State 96

   48 fcn_body: if_statement • DEL_QUEST

    DEL_QUEST  shift, and go to state 111


State 97

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   39 make_fcn: KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body • KW_enddef
   50 fcn_body: fcn_body • assignment DEL_QUEST
   51         | fcn_body • fcn_call DEL_QUEST
   52         | fcn_body • declaration DEL_QUEST
   53         | fcn_body • if_statement DEL_QUEST
   54         | fcn_body • KW_return expression DEL_QUEST
   55         | fcn_body • KW_return one_liner DEL_QUEST
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_if      shift, and go to state 3
    KW_enddef  shift, and go to state 112
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 106
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    assignment    go to state 107
    declaration   go to state 108
    fcn_call      go to state 109
    if_statement  go to state 110
    expression    go to state 17


State 98

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   40 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type • fcn_body KW_enddef
   45 fcn_body: • assignment DEL_QUEST
   46         | • declaration DEL_QUEST
   47         | • fcn_call DEL_QUEST
   48         | • if_statement DEL_QUEST
   49         | • KW_return one_liner DEL_QUEST
   50         | • fcn_body assignment DEL_QUEST
   51         | • fcn_body fcn_call DEL_QUEST
   52         | • fcn_body declaration DEL_QUEST
   53         | • fcn_body if_statement DEL_QUEST
   54         | • fcn_body KW_return expression DEL_QUEST
   55         | • fcn_body KW_return one_liner DEL_QUEST
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_if      shift, and go to state 3
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 91
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    assignment    go to state 92
    declaration   go to state 93
    fcn_call      go to state 94
    fcn_body      go to state 113
    if_statement  go to state 96
    expression    go to state 17


State 99

   43 fcn_ret_type: OP_MINUS OP_GREATER KW_integer • DEL_DOTS

    DEL_DOTS  shift, and go to state 114


State 100

   44 fcn_ret_type: OP_MINUS OP_GREATER KW_boolean • DEL_DOTS

    DEL_DOTS  shift, and go to state 115


State 101

   35 one_liner: one_liner • DEL_COMMA expression
   36          | one_liner • expression
   37          | one_liner • expression operators
   49 fcn_body: KW_return one_liner • DEL_QUEST
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_QUEST  shift, and go to state 116
    DEL_COMMA  shift, and go to state 38

    expression  go to state 39


State 102

   45 fcn_body: assignment DEL_QUEST •

    $default  reduce using rule 45 (fcn_body)


State 103

   46 fcn_body: declaration DEL_QUEST •

    $default  reduce using rule 46 (fcn_body)


State 104

   47 fcn_body: fcn_call DEL_QUEST •

    $default  reduce using rule 47 (fcn_body)


State 105

   38 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef •

    $default  reduce using rule 38 (make_fcn)


State 106

   33 one_liner: • expression operators
   34          | • expression DEL_COMMA
   35          | • one_liner DEL_COMMA expression
   36          | • one_liner expression
   37          | • one_liner expression operators
   54 fcn_body: fcn_body KW_return • expression DEL_QUEST
   55         | fcn_body KW_return • one_liner DEL_QUEST
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   60           | KW_return •  [OP_EQUAL, DEL_LPAR, DEL_COMMA, DEL_DOTS]
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7

    $default  reduce using rule 60 (expression)

    one_liner   go to state 117
    expression  go to state 118


State 107

   50 fcn_body: fcn_body assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 119


State 108

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   52 fcn_body: fcn_body declaration • DEL_QUEST

    DEL_QUEST  shift, and go to state 120
    DEL_COMMA  shift, and go to state 28
    DEL_DOTS   shift, and go to state 29

    var_type  go to state 30


State 109

   51 fcn_body: fcn_body fcn_call • DEL_QUEST

    DEL_QUEST  shift, and go to state 121


State 110

   53 fcn_body: fcn_body if_statement • DEL_QUEST

    DEL_QUEST  shift, and go to state 122


State 111

   48 fcn_body: if_statement DEL_QUEST •

    $default  reduce using rule 48 (fcn_body)


State 112

   39 make_fcn: KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef •

    $default  reduce using rule 39 (make_fcn)


State 113

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   40 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body • KW_enddef
   50 fcn_body: fcn_body • assignment DEL_QUEST
   51         | fcn_body • fcn_call DEL_QUEST
   52         | fcn_body • declaration DEL_QUEST
   53         | fcn_body • if_statement DEL_QUEST
   54         | fcn_body • KW_return expression DEL_QUEST
   55         | fcn_body • KW_return one_liner DEL_QUEST
   56 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_if      shift, and go to state 3
    KW_enddef  shift, and go to state 123
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 106
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_LPAR   shift, and go to state 8

    assignment    go to state 107
    declaration   go to state 108
    fcn_call      go to state 109
    if_statement  go to state 110
    expression    go to state 17


State 114

   43 fcn_ret_type: OP_MINUS OP_GREATER KW_integer DEL_DOTS •

    $default  reduce using rule 43 (fcn_ret_type)


State 115

   44 fcn_ret_type: OP_MINUS OP_GREATER KW_boolean DEL_DOTS •

    $default  reduce using rule 44 (fcn_ret_type)


State 116

   49 fcn_body: KW_return one_liner DEL_QUEST •

    $default  reduce using rule 49 (fcn_body)


State 117

   35 one_liner: one_liner • DEL_COMMA expression
   36          | one_liner • expression
   37          | one_liner • expression operators
   55 fcn_body: fcn_body KW_return one_liner • DEL_QUEST
   57 expression: • T_ID
   58           | • T_INT
   59           | • T_STRING
   60           | • KW_return
   61           | • KW_main

    T_ID       shift, and go to state 1
    KW_main    shift, and go to state 4
    KW_return  shift, and go to state 5
    T_INT      shift, and go to state 6
    T_STRING   shift, and go to state 7
    DEL_QUEST  shift, and go to state 124
    DEL_COMMA  shift, and go to state 38

    expression  go to state 39


State 118

   33 one_liner: expression • operators
   34          | expression • DEL_COMMA
   54 fcn_body: fcn_body KW_return expression • DEL_QUEST
   62 operators: • OP_MINUS
   63          | • OP_PLUS
   64          | • OP_MUL
   65          | • OP_EQUAL
   66          | • OP_LESS

    OP_PLUS    shift, and go to state 40
    OP_MINUS   shift, and go to state 41
    OP_MUL     shift, and go to state 42
    OP_LESS    shift, and go to state 43
    OP_EQUAL   shift, and go to state 44
    DEL_QUEST  shift, and go to state 125
    DEL_COMMA  shift, and go to state 45

    operators  go to state 46


State 119

   50 fcn_body: fcn_body assignment DEL_QUEST •

    $default  reduce using rule 50 (fcn_body)


State 120

   52 fcn_body: fcn_body declaration DEL_QUEST •

    $default  reduce using rule 52 (fcn_body)


State 121

   51 fcn_body: fcn_body fcn_call DEL_QUEST •

    $default  reduce using rule 51 (fcn_body)


State 122

   53 fcn_body: fcn_body if_statement DEL_QUEST •

    $default  reduce using rule 53 (fcn_body)


State 123

   40 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef •

    $default  reduce using rule 40 (make_fcn)


State 124

   55 fcn_body: fcn_body KW_return one_liner DEL_QUEST •

    $default  reduce using rule 55 (fcn_body)


State 125

   54 fcn_body: fcn_body KW_return expression DEL_QUEST •

    $default  reduce using rule 54 (fcn_body)
