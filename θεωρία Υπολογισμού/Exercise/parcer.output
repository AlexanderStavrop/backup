Nonterminals useless in grammar

    update_var


Terminals unused in grammar

    KW_scalar
    KW_boolean
    KW_True
    KW_False
    KW_if
    KW_else
    KW_endif
    KW_for
    KW_in
    KW_endfor
    KW_while
    KW_endwhile
    KW_break
    KW_continue
    KW_not
    KW_and
    KW_or
    KW_com
    KW_endcomp
    KW_of
    T_FLOAT
    OP_DIV
    OP_MOD
    OP_EXP
    OP_EQ
    OP_NOTEQ
    OP_LESS
    OP_LEQ
    OP_GEQ
    OP_INCREM
    OP_DECREM
    OP_MULCREM
    OP_DIVCREM
    OP_MODCREM
    DEL_LBRAC
    DEL_RBRAC
    DEL_DOT
    COMM_STR
    NEW_LINE
    '*'
    '/'


Grammar

    0 $accept: program_start $end

    1 program_start: ε
    2              | program_body

    3 program_body: constant DEL_QUEST
    4             | program_body constant DEL_QUEST
    5             | assignment DEL_QUEST
    6             | program_body assignment DEL_QUEST
    7             | declaration DEL_QUEST
    8             | program_body declaration DEL_QUEST
    9             | function DEL_QUEST
   10             | program_body function DEL_QUEST

   11 function: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   12         | KW_def KW_main DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   13         | KW_def expression DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS function_body KW_enddef
   14         | KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type function_body KW_enddef

   15 fcn_arguments: expression var_type
   16              | fcn_arguments DEL_COMMA expression var_type

   17 fcn_ret_type: OP_MINUS OP_GREATER KW_integer DEL_DOTS

   18 function_body: fcn_line DEL_QUEST
   19              | function_body fcn_line DEL_QUEST

   20 fcn_line: expression
   21         | fcn_line expression
   22         | KW_return expression
   23         | fcn_line KW_return expression
   24         | fcn_declaration
   25         | fcn_line fcn_declaration
   26         | fcn_line DEL_LPAR DEL_RPAR
   27         | fcn_line DEL_LPAR expression DEL_RPAR
   28         | expression OP_EQUAL full_expression

   29 fcn_declaration: expression var_type

   30 constant: KW_const assignment

   31 assignment: expression OP_EQUAL expression var_type
   32           | expression OP_EQUAL OP_MINUS expression var_type

   33 declaration: expression
   34            | declaration DEL_COMMA expression
   35            | declaration var_type

   36 var_type: DEL_DOTS KW_str
   37         | DEL_DOTS KW_integer
   38         | DEL_DOTS T_ID

   39 full_expression: DEL_LPAR expression operators expression DEL_RPAR

   40 expression: T_ID
   41           | T_INT
   42           | T_STRING

   43 operators: OP_MINUS
   44          | OP_PLUS
   45          | OP_MUL


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '/' (47)
    error (256)
    T_ID <str> (258) 38 40
    KW_integer (259) 17 37
    KW_scalar (260)
    KW_str (261) 36
    KW_boolean (262)
    KW_True (263)
    KW_False (264)
    KW_const (265) 30
    KW_if (266)
    KW_else (267)
    KW_endif (268)
    KW_for (269)
    KW_in (270)
    KW_endfor (271)
    KW_while (272)
    KW_endwhile (273)
    KW_break (274)
    KW_continue (275)
    KW_not (276)
    KW_and (277)
    KW_or (278)
    KW_def (279) 11 12 13 14
    KW_enddef (280) 11 12 13 14
    KW_main (281) 12
    KW_return (282) 22 23
    KW_com (283)
    KW_endcomp (284)
    KW_of (285)
    T_INT <str> (286) 41
    T_FLOAT <str> (287)
    T_STRING <str> (288) 42
    OP_PLUS (289) 44
    OP_MINUS <str> (290) 17 32 43
    OP_MUL (291) 45
    OP_DIV (292)
    OP_MOD (293)
    OP_EXP (294)
    OP_EQ (295)
    OP_NOTEQ (296)
    OP_LESS (297)
    OP_LEQ (298)
    OP_GREATER (299) 17
    OP_GEQ (300)
    OP_EQUAL <str> (301) 28 31 32
    OP_INCREM (302)
    OP_DECREM (303)
    OP_MULCREM (304)
    OP_DIVCREM (305)
    OP_MODCREM (306)
    DEL_QUEST (307) 3 4 5 6 7 8 9 10 18 19
    DEL_LPAR (308) 11 12 13 14 26 27 39
    DEL_RPAR (309) 11 12 13 14 26 27 39
    DEL_COMMA (310) 16 34
    DEL_LBRAC (311)
    DEL_RBRAC (312)
    DEL_DOTS (313) 11 12 13 17 36 37 38
    DEL_DOT (314)
    COMM_STR (315)
    NEW_LINE (316)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program_start (65)
        on left: 1 2
        on right: 0
    program_body <str> (66)
        on left: 3 4 5 6 7 8 9 10
        on right: 2 4 6 8 10
    function <str> (67)
        on left: 11 12 13 14
        on right: 9 10
    fcn_arguments <str> (68)
        on left: 15 16
        on right: 13 14 16
    fcn_ret_type <str> (69)
        on left: 17
        on right: 14
    function_body <str> (70)
        on left: 18 19
        on right: 11 12 13 14 19
    fcn_line <str> (71)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 18 19 21 23 25 26 27
    fcn_declaration <str> (72)
        on left: 29
        on right: 24 25
    constant <str> (73)
        on left: 30
        on right: 3 4
    assignment <str> (74)
        on left: 31 32
        on right: 5 6 30
    declaration <str> (75)
        on left: 33 34 35
        on right: 7 8 34 35
    var_type <str> (76)
        on left: 36 37 38
        on right: 15 16 29 31 32 35
    full_expression <str> (77)
        on left: 39
        on right: 28
    expression <str> (78)
        on left: 40 41 42
        on right: 11 13 14 15 16 20 21 22 23 27 28 29 31 32 33 34 39
    operators <str> (79)
        on left: 43 44 45
        on right: 39


State 0

    0 $accept: • program_start $end
    1 program_start: ε •  [$end]
    2              | • program_body
    3 program_body: • constant DEL_QUEST
    4             | • program_body constant DEL_QUEST
    5             | • assignment DEL_QUEST
    6             | • program_body assignment DEL_QUEST
    7             | • declaration DEL_QUEST
    8             | • program_body declaration DEL_QUEST
    9             | • function DEL_QUEST
   10             | • program_body function DEL_QUEST
   11 function: • KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   12         | • KW_def KW_main DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   13         | • KW_def expression DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS function_body KW_enddef
   14         | • KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type function_body KW_enddef
   30 constant: • KW_const assignment
   31 assignment: • expression OP_EQUAL expression var_type
   32           | • expression OP_EQUAL OP_MINUS expression var_type
   33 declaration: • expression
   34            | • declaration DEL_COMMA expression
   35            | • declaration var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    KW_const  shift, and go to state 2
    KW_def    shift, and go to state 3
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    $default  reduce using rule 1 (program_start)

    program_start  go to state 6
    program_body   go to state 7
    function       go to state 8
    constant       go to state 9
    assignment     go to state 10
    declaration    go to state 11
    expression     go to state 12


State 1

   40 expression: T_ID •

    $default  reduce using rule 40 (expression)


State 2

   30 constant: KW_const • assignment
   31 assignment: • expression OP_EQUAL expression var_type
   32           | • expression OP_EQUAL OP_MINUS expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    assignment  go to state 13
    expression  go to state 14


State 3

   11 function: KW_def • expression DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   12         | KW_def • KW_main DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   13         | KW_def • expression DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS function_body KW_enddef
   14         | KW_def • expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type function_body KW_enddef
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    KW_main   shift, and go to state 15
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 16


State 4

   41 expression: T_INT •

    $default  reduce using rule 41 (expression)


State 5

   42 expression: T_STRING •

    $default  reduce using rule 42 (expression)


State 6

    0 $accept: program_start • $end

    $end  shift, and go to state 17


State 7

    2 program_start: program_body •  [$end]
    4 program_body: program_body • constant DEL_QUEST
    6             | program_body • assignment DEL_QUEST
    8             | program_body • declaration DEL_QUEST
   10             | program_body • function DEL_QUEST
   11 function: • KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   12         | • KW_def KW_main DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   13         | • KW_def expression DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS function_body KW_enddef
   14         | • KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type function_body KW_enddef
   30 constant: • KW_const assignment
   31 assignment: • expression OP_EQUAL expression var_type
   32           | • expression OP_EQUAL OP_MINUS expression var_type
   33 declaration: • expression
   34            | • declaration DEL_COMMA expression
   35            | • declaration var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    KW_const  shift, and go to state 2
    KW_def    shift, and go to state 3
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    $default  reduce using rule 2 (program_start)

    function     go to state 18
    constant     go to state 19
    assignment   go to state 20
    declaration  go to state 21
    expression   go to state 12


State 8

    9 program_body: function • DEL_QUEST

    DEL_QUEST  shift, and go to state 22


State 9

    3 program_body: constant • DEL_QUEST

    DEL_QUEST  shift, and go to state 23


State 10

    5 program_body: assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 24


State 11

    7 program_body: declaration • DEL_QUEST
   34 declaration: declaration • DEL_COMMA expression
   35            | declaration • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    DEL_QUEST  shift, and go to state 25
    DEL_COMMA  shift, and go to state 26
    DEL_DOTS   shift, and go to state 27

    var_type  go to state 28


State 12

   31 assignment: expression • OP_EQUAL expression var_type
   32           | expression • OP_EQUAL OP_MINUS expression var_type
   33 declaration: expression •  [DEL_QUEST, DEL_COMMA, DEL_DOTS]

    OP_EQUAL  shift, and go to state 29

    $default  reduce using rule 33 (declaration)


State 13

   30 constant: KW_const assignment •

    $default  reduce using rule 30 (constant)


State 14

   31 assignment: expression • OP_EQUAL expression var_type
   32           | expression • OP_EQUAL OP_MINUS expression var_type

    OP_EQUAL  shift, and go to state 29


State 15

   12 function: KW_def KW_main • DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef

    DEL_LPAR  shift, and go to state 30


State 16

   11 function: KW_def expression • DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef
   13         | KW_def expression • DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS function_body KW_enddef
   14         | KW_def expression • DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type function_body KW_enddef

    DEL_LPAR  shift, and go to state 31


State 17

    0 $accept: program_start $end •

    $default  accept


State 18

   10 program_body: program_body function • DEL_QUEST

    DEL_QUEST  shift, and go to state 32


State 19

    4 program_body: program_body constant • DEL_QUEST

    DEL_QUEST  shift, and go to state 33


State 20

    6 program_body: program_body assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 34


State 21

    8 program_body: program_body declaration • DEL_QUEST
   34 declaration: declaration • DEL_COMMA expression
   35            | declaration • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    DEL_QUEST  shift, and go to state 35
    DEL_COMMA  shift, and go to state 26
    DEL_DOTS   shift, and go to state 27

    var_type  go to state 28


State 22

    9 program_body: function DEL_QUEST •

    $default  reduce using rule 9 (program_body)


State 23

    3 program_body: constant DEL_QUEST •

    $default  reduce using rule 3 (program_body)


State 24

    5 program_body: assignment DEL_QUEST •

    $default  reduce using rule 5 (program_body)


State 25

    7 program_body: declaration DEL_QUEST •

    $default  reduce using rule 7 (program_body)


State 26

   34 declaration: declaration DEL_COMMA • expression
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 36


State 27

   36 var_type: DEL_DOTS • KW_str
   37         | DEL_DOTS • KW_integer
   38         | DEL_DOTS • T_ID

    T_ID        shift, and go to state 37
    KW_integer  shift, and go to state 38
    KW_str      shift, and go to state 39


State 28

   35 declaration: declaration var_type •

    $default  reduce using rule 35 (declaration)


State 29

   31 assignment: expression OP_EQUAL • expression var_type
   32           | expression OP_EQUAL • OP_MINUS expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5
    OP_MINUS  shift, and go to state 40

    expression  go to state 41


State 30

   12 function: KW_def KW_main DEL_LPAR • DEL_RPAR DEL_DOTS function_body KW_enddef

    DEL_RPAR  shift, and go to state 42


State 31

   11 function: KW_def expression DEL_LPAR • DEL_RPAR DEL_DOTS function_body KW_enddef
   13         | KW_def expression DEL_LPAR • fcn_arguments DEL_RPAR DEL_DOTS function_body KW_enddef
   14         | KW_def expression DEL_LPAR • fcn_arguments DEL_RPAR fcn_ret_type function_body KW_enddef
   15 fcn_arguments: • expression var_type
   16              | • fcn_arguments DEL_COMMA expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5
    DEL_RPAR  shift, and go to state 43

    fcn_arguments  go to state 44
    expression     go to state 45


State 32

   10 program_body: program_body function DEL_QUEST •

    $default  reduce using rule 10 (program_body)


State 33

    4 program_body: program_body constant DEL_QUEST •

    $default  reduce using rule 4 (program_body)


State 34

    6 program_body: program_body assignment DEL_QUEST •

    $default  reduce using rule 6 (program_body)


State 35

    8 program_body: program_body declaration DEL_QUEST •

    $default  reduce using rule 8 (program_body)


State 36

   34 declaration: declaration DEL_COMMA expression •

    $default  reduce using rule 34 (declaration)


State 37

   38 var_type: DEL_DOTS T_ID •

    $default  reduce using rule 38 (var_type)


State 38

   37 var_type: DEL_DOTS KW_integer •

    $default  reduce using rule 37 (var_type)


State 39

   36 var_type: DEL_DOTS KW_str •

    $default  reduce using rule 36 (var_type)


State 40

   32 assignment: expression OP_EQUAL OP_MINUS • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 46


State 41

   31 assignment: expression OP_EQUAL expression • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    DEL_DOTS  shift, and go to state 27

    var_type  go to state 47


State 42

   12 function: KW_def KW_main DEL_LPAR DEL_RPAR • DEL_DOTS function_body KW_enddef

    DEL_DOTS  shift, and go to state 48


State 43

   11 function: KW_def expression DEL_LPAR DEL_RPAR • DEL_DOTS function_body KW_enddef

    DEL_DOTS  shift, and go to state 49


State 44

   13 function: KW_def expression DEL_LPAR fcn_arguments • DEL_RPAR DEL_DOTS function_body KW_enddef
   14         | KW_def expression DEL_LPAR fcn_arguments • DEL_RPAR fcn_ret_type function_body KW_enddef
   16 fcn_arguments: fcn_arguments • DEL_COMMA expression var_type

    DEL_RPAR   shift, and go to state 50
    DEL_COMMA  shift, and go to state 51


State 45

   15 fcn_arguments: expression • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    DEL_DOTS  shift, and go to state 27

    var_type  go to state 52


State 46

   32 assignment: expression OP_EQUAL OP_MINUS expression • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    DEL_DOTS  shift, and go to state 27

    var_type  go to state 53


State 47

   31 assignment: expression OP_EQUAL expression var_type •

    $default  reduce using rule 31 (assignment)


State 48

   12 function: KW_def KW_main DEL_LPAR DEL_RPAR DEL_DOTS • function_body KW_enddef
   18 function_body: • fcn_line DEL_QUEST
   19              | • function_body fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    function_body    go to state 55
    fcn_line         go to state 56
    fcn_declaration  go to state 57
    expression       go to state 58


State 49

   11 function: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS • function_body KW_enddef
   18 function_body: • fcn_line DEL_QUEST
   19              | • function_body fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    function_body    go to state 59
    fcn_line         go to state 56
    fcn_declaration  go to state 57
    expression       go to state 58


State 50

   13 function: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR • DEL_DOTS function_body KW_enddef
   14         | KW_def expression DEL_LPAR fcn_arguments DEL_RPAR • fcn_ret_type function_body KW_enddef
   17 fcn_ret_type: • OP_MINUS OP_GREATER KW_integer DEL_DOTS

    OP_MINUS  shift, and go to state 60
    DEL_DOTS  shift, and go to state 61

    fcn_ret_type  go to state 62


State 51

   16 fcn_arguments: fcn_arguments DEL_COMMA • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 63


State 52

   15 fcn_arguments: expression var_type •

    $default  reduce using rule 15 (fcn_arguments)


State 53

   32 assignment: expression OP_EQUAL OP_MINUS expression var_type •

    $default  reduce using rule 32 (assignment)


State 54

   22 fcn_line: KW_return • expression
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 64


State 55

   12 function: KW_def KW_main DEL_LPAR DEL_RPAR DEL_DOTS function_body • KW_enddef
   19 function_body: function_body • fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_enddef  shift, and go to state 65
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    fcn_line         go to state 66
    fcn_declaration  go to state 57
    expression       go to state 58


State 56

   18 function_body: fcn_line • DEL_QUEST
   21 fcn_line: fcn_line • expression
   23         | fcn_line • KW_return expression
   25         | fcn_line • fcn_declaration
   26         | fcn_line • DEL_LPAR DEL_RPAR
   27         | fcn_line • DEL_LPAR expression DEL_RPAR
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_return  shift, and go to state 67
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5
    DEL_QUEST  shift, and go to state 68
    DEL_LPAR   shift, and go to state 69

    fcn_declaration  go to state 70
    expression       go to state 71


State 57

   24 fcn_line: fcn_declaration •

    $default  reduce using rule 24 (fcn_line)


State 58

   20 fcn_line: expression •  [T_ID, KW_return, T_INT, T_STRING, DEL_QUEST, DEL_LPAR]
   28         | expression • OP_EQUAL full_expression
   29 fcn_declaration: expression • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    OP_EQUAL  shift, and go to state 72
    DEL_DOTS  shift, and go to state 27

    $default  reduce using rule 20 (fcn_line)

    var_type  go to state 73


State 59

   11 function: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS function_body • KW_enddef
   19 function_body: function_body • fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_enddef  shift, and go to state 74
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    fcn_line         go to state 66
    fcn_declaration  go to state 57
    expression       go to state 58


State 60

   17 fcn_ret_type: OP_MINUS • OP_GREATER KW_integer DEL_DOTS

    OP_GREATER  shift, and go to state 75


State 61

   13 function: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS • function_body KW_enddef
   18 function_body: • fcn_line DEL_QUEST
   19              | • function_body fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    function_body    go to state 76
    fcn_line         go to state 56
    fcn_declaration  go to state 57
    expression       go to state 58


State 62

   14 function: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type • function_body KW_enddef
   18 function_body: • fcn_line DEL_QUEST
   19              | • function_body fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    function_body    go to state 77
    fcn_line         go to state 56
    fcn_declaration  go to state 57
    expression       go to state 58


State 63

   16 fcn_arguments: fcn_arguments DEL_COMMA expression • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    DEL_DOTS  shift, and go to state 27

    var_type  go to state 78


State 64

   22 fcn_line: KW_return expression •

    $default  reduce using rule 22 (fcn_line)


State 65

   12 function: KW_def KW_main DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef •

    $default  reduce using rule 12 (function)


State 66

   19 function_body: function_body fcn_line • DEL_QUEST
   21 fcn_line: fcn_line • expression
   23         | fcn_line • KW_return expression
   25         | fcn_line • fcn_declaration
   26         | fcn_line • DEL_LPAR DEL_RPAR
   27         | fcn_line • DEL_LPAR expression DEL_RPAR
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_return  shift, and go to state 67
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5
    DEL_QUEST  shift, and go to state 79
    DEL_LPAR   shift, and go to state 69

    fcn_declaration  go to state 70
    expression       go to state 71


State 67

   23 fcn_line: fcn_line KW_return • expression
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 80


State 68

   18 function_body: fcn_line DEL_QUEST •

    $default  reduce using rule 18 (function_body)


State 69

   26 fcn_line: fcn_line DEL_LPAR • DEL_RPAR
   27         | fcn_line DEL_LPAR • expression DEL_RPAR
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5
    DEL_RPAR  shift, and go to state 81

    expression  go to state 82


State 70

   25 fcn_line: fcn_line fcn_declaration •

    $default  reduce using rule 25 (fcn_line)


State 71

   21 fcn_line: fcn_line expression •  [T_ID, KW_return, T_INT, T_STRING, DEL_QUEST, DEL_LPAR]
   29 fcn_declaration: expression • var_type
   36 var_type: • DEL_DOTS KW_str
   37         | • DEL_DOTS KW_integer
   38         | • DEL_DOTS T_ID

    DEL_DOTS  shift, and go to state 27

    $default  reduce using rule 21 (fcn_line)

    var_type  go to state 73


State 72

   28 fcn_line: expression OP_EQUAL • full_expression
   39 full_expression: • DEL_LPAR expression operators expression DEL_RPAR

    DEL_LPAR  shift, and go to state 83

    full_expression  go to state 84


State 73

   29 fcn_declaration: expression var_type •

    $default  reduce using rule 29 (fcn_declaration)


State 74

   11 function: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS function_body KW_enddef •

    $default  reduce using rule 11 (function)


State 75

   17 fcn_ret_type: OP_MINUS OP_GREATER • KW_integer DEL_DOTS

    KW_integer  shift, and go to state 85


State 76

   13 function: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS function_body • KW_enddef
   19 function_body: function_body • fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_enddef  shift, and go to state 86
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    fcn_line         go to state 66
    fcn_declaration  go to state 57
    expression       go to state 58


State 77

   14 function: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type function_body • KW_enddef
   19 function_body: function_body • fcn_line DEL_QUEST
   20 fcn_line: • expression
   21         | • fcn_line expression
   22         | • KW_return expression
   23         | • fcn_line KW_return expression
   24         | • fcn_declaration
   25         | • fcn_line fcn_declaration
   26         | • fcn_line DEL_LPAR DEL_RPAR
   27         | • fcn_line DEL_LPAR expression DEL_RPAR
   28         | • expression OP_EQUAL full_expression
   29 fcn_declaration: • expression var_type
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID       shift, and go to state 1
    KW_enddef  shift, and go to state 87
    KW_return  shift, and go to state 54
    T_INT      shift, and go to state 4
    T_STRING   shift, and go to state 5

    fcn_line         go to state 66
    fcn_declaration  go to state 57
    expression       go to state 58


State 78

   16 fcn_arguments: fcn_arguments DEL_COMMA expression var_type •

    $default  reduce using rule 16 (fcn_arguments)


State 79

   19 function_body: function_body fcn_line DEL_QUEST •

    $default  reduce using rule 19 (function_body)


State 80

   23 fcn_line: fcn_line KW_return expression •

    $default  reduce using rule 23 (fcn_line)


State 81

   26 fcn_line: fcn_line DEL_LPAR DEL_RPAR •

    $default  reduce using rule 26 (fcn_line)


State 82

   27 fcn_line: fcn_line DEL_LPAR expression • DEL_RPAR

    DEL_RPAR  shift, and go to state 88


State 83

   39 full_expression: DEL_LPAR • expression operators expression DEL_RPAR
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 89


State 84

   28 fcn_line: expression OP_EQUAL full_expression •

    $default  reduce using rule 28 (fcn_line)


State 85

   17 fcn_ret_type: OP_MINUS OP_GREATER KW_integer • DEL_DOTS

    DEL_DOTS  shift, and go to state 90


State 86

   13 function: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR DEL_DOTS function_body KW_enddef •

    $default  reduce using rule 13 (function)


State 87

   14 function: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type function_body KW_enddef •

    $default  reduce using rule 14 (function)


State 88

   27 fcn_line: fcn_line DEL_LPAR expression DEL_RPAR •

    $default  reduce using rule 27 (fcn_line)


State 89

   39 full_expression: DEL_LPAR expression • operators expression DEL_RPAR
   43 operators: • OP_MINUS
   44          | • OP_PLUS
   45          | • OP_MUL

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    OP_MUL    shift, and go to state 93

    operators  go to state 94


State 90

   17 fcn_ret_type: OP_MINUS OP_GREATER KW_integer DEL_DOTS •

    $default  reduce using rule 17 (fcn_ret_type)


State 91

   44 operators: OP_PLUS •

    $default  reduce using rule 44 (operators)


State 92

   43 operators: OP_MINUS •

    $default  reduce using rule 43 (operators)


State 93

   45 operators: OP_MUL •

    $default  reduce using rule 45 (operators)


State 94

   39 full_expression: DEL_LPAR expression operators • expression DEL_RPAR
   40 expression: • T_ID
   41           | • T_INT
   42           | • T_STRING

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 4
    T_STRING  shift, and go to state 5

    expression  go to state 95


State 95

   39 full_expression: DEL_LPAR expression operators expression • DEL_RPAR

    DEL_RPAR  shift, and go to state 96


State 96

   39 full_expression: DEL_LPAR expression operators expression DEL_RPAR •

    $default  reduce using rule 39 (full_expression)
