Nonterminals useless in grammar

    while_body


Terminals unused in grammar

    KW_scalar
    KW_False
    KW_for
    KW_in
    KW_endfor
    KW_break
    KW_continue
    KW_not
    KW_or
    KW_com
    KW_endcomp
    KW_of
    T_FLOAT
    OP_DIV
    OP_EXP
    OP_LEQ
    OP_GEQ
    OP_INCREM
    OP_DECREM
    OP_MULCREM
    OP_DIVCREM
    OP_MODCREM
    DEL_LBRAC
    DEL_RBRAC
    DEL_DOT
    COMM_STR
    NEW_LINE
    '*'
    '/'


Rules useless in grammar

   87 while_body: assignment DEL_QUEST
   88           | declaration DEL_QUEST
   89           | fcn_call DEL_QUEST
   90           | KW_return one_liner DEL_QUEST
   91           | while_statement DEL_QUEST
   92           | while_body assignment DEL_QUEST
   93           | while_body declaration DEL_QUEST
   94           | while_body fcn_call DEL_QUEST
   95           | while_body while_statement DEL_QUEST
   96           | while_body KW_return one_liner DEL_QUEST


Grammar

    0 $accept: program_start $end

    1 program_start: ε
    2              | program_body

    3 program_body: full_expression DEL_QUEST
    4             | program_body full_expression DEL_QUEST
    5             | program_body full_expression KW_enddef DEL_QUEST
    6             | program_body make_fcn DEL_QUEST

    7 full_expression: constant
    8                | declaration
    9                | assignment
   10                | fcn_call
   11                | if_statement

   12 constant: KW_const assignment var_type

   13 assignment: expression OP_EQUAL kati

   14 kati: expression
   15     | fcn_call
   16     | operators
   17     | kati expression
   18     | kati operators fcn_call

   19 declaration: expression var_type
   20            | expression DEL_COMMA expression
   21            | declaration DEL_COMMA expression
   22            | declaration var_type

   23 var_type: DEL_DOTS KW_str
   24         | DEL_DOTS KW_integer
   25         | DEL_DOTS T_ID
   26         | DEL_DOTS KW_boolean

   27 fcn_call: expression DEL_LPAR DEL_RPAR
   28         | DEL_LPAR one_liner DEL_RPAR
   29         | expression DEL_LPAR expression DEL_RPAR
   30         | expression DEL_LPAR operators expression DEL_RPAR
   31         | expression DEL_LPAR one_liner DEL_RPAR
   32         | expression DEL_LPAR operators one_liner DEL_RPAR

   33 one_liner: expression expression
   34          | expression operators
   35          | expression DEL_COMMA
   36          | one_liner DEL_COMMA expression
   37          | one_liner expression
   38          | one_liner expression operators
   39          | one_liner DEL_LPAR one_liner DEL_RPAR

   40 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   41         | KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   42         | KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef

   43 fcn_arguments: declaration
   44              | fcn_arguments declaration

   45 fcn_ret_type: OP_MINUS OP_GREATER KW_integer DEL_DOTS
   46             | OP_MINUS OP_GREATER KW_boolean DEL_DOTS

   47 fcn_body: assignment DEL_QUEST
   48         | declaration DEL_QUEST
   49         | fcn_call DEL_QUEST
   50         | KW_return one_liner DEL_QUEST
   51         | fcn_body assignment DEL_QUEST
   52         | fcn_body fcn_call DEL_QUEST
   53         | fcn_body declaration DEL_QUEST
   54         | fcn_body if_statement DEL_QUEST
   55         | fcn_body while_statement DEL_QUEST
   56         | fcn_body KW_return expression DEL_QUEST
   57         | fcn_body KW_return one_liner DEL_QUEST

   58 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif

   60 if_body: if_statement
   61        | assignment DEL_QUEST
   62        | declaration DEL_QUEST
   63        | fcn_call DEL_QUEST
   64        | KW_return one_liner DEL_QUEST
   65        | while_statement DEL_QUEST
   66        | if_body assignment DEL_QUEST
   67        | if_body declaration DEL_QUEST
   68        | if_body fcn_call DEL_QUEST
   69        | if_body while_statement DEL_QUEST
   70        | if_body KW_return one_liner DEL_QUEST

   71 while_statement: KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile

   72 expression: T_ID
   73           | T_INT
   74           | T_STRING
   75           | KW_return
   76           | KW_main
   77           | KW_True
   78           | KW_and

   79 operators: OP_MINUS
   80          | OP_PLUS
   81          | OP_MUL
   82          | OP_EQUAL
   83          | OP_LESS
   84          | OP_EQ
   85          | OP_MOD
   86          | OP_NOTEQ


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '/' (47)
    error (256)
    T_ID <str> (258) 25 72
    KW_integer (259) 24 45
    KW_scalar (260)
    KW_str (261) 23
    KW_boolean (262) 26 46
    KW_True (263) 77
    KW_False (264)
    KW_const (265) 12
    KW_if (266) 58 59
    KW_else (267) 59
    KW_endif (268) 58 59
    KW_for (269)
    KW_in (270)
    KW_endfor (271)
    KW_while (272) 71
    KW_endwhile (273) 71
    KW_break (274)
    KW_continue (275)
    KW_not (276)
    KW_and (277) 78
    KW_or (278)
    KW_def (279) 40 41 42
    KW_enddef (280) 5 40 41 42
    KW_main (281) 76
    KW_return (282) 50 56 57 64 70 75
    KW_com (283)
    KW_endcomp (284)
    KW_of (285)
    T_INT <str> (286) 73
    T_FLOAT <str> (287)
    T_STRING <str> (288) 74
    OP_PLUS (289) 80
    OP_MINUS <str> (290) 45 46 79
    OP_MUL (291) 81
    OP_DIV (292)
    OP_MOD (293) 85
    OP_EXP (294)
    OP_EQ (295) 84
    OP_NOTEQ (296) 86
    OP_LESS (297) 83
    OP_LEQ (298)
    OP_GREATER (299) 45 46
    OP_GEQ (300)
    OP_EQUAL <str> (301) 13 82
    OP_INCREM (302)
    OP_DECREM (303)
    OP_MULCREM (304)
    OP_DIVCREM (305)
    OP_MODCREM (306)
    DEL_QUEST (307) 3 4 5 6 47 48 49 50 51 52 53 54 55 56 57 61 62 63 64 65 66 67 68 69 70
    DEL_LPAR (308) 27 28 29 30 31 32 39 40 41 42 58 59 71
    DEL_RPAR (309) 27 28 29 30 31 32 39 40 41 42 58 59 71
    DEL_COMMA (310) 20 21 35 36
    DEL_LBRAC (311)
    DEL_RBRAC (312)
    DEL_DOTS (313) 23 24 25 26 40 45 46 58 59 71
    DEL_DOT (314)
    COMM_STR (315)
    NEW_LINE (316)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program_start (65)
        on left: 1 2
        on right: 0
    program_body <str> (66)
        on left: 3 4 5 6
        on right: 2 4 5 6
    full_expression <str> (67)
        on left: 7 8 9 10 11
        on right: 3 4 5
    constant <str> (68)
        on left: 12
        on right: 7
    assignment <str> (69)
        on left: 13
        on right: 9 12 47 51 61 66
    kati <str> (70)
        on left: 14 15 16 17 18
        on right: 13 17 18
    declaration <str> (71)
        on left: 19 20 21 22
        on right: 8 21 22 43 44 48 53 62 67
    var_type <str> (72)
        on left: 23 24 25 26
        on right: 12 19 22
    fcn_call <str> (73)
        on left: 27 28 29 30 31 32
        on right: 10 15 18 49 52 63 68
    one_liner <str> (74)
        on left: 33 34 35 36 37 38 39
        on right: 28 31 32 36 37 38 39 50 57 58 59 64 70 71
    make_fcn <str> (75)
        on left: 40 41 42
        on right: 6
    fcn_arguments <str> (76)
        on left: 43 44
        on right: 42 44
    fcn_ret_type <str> (77)
        on left: 45 46
        on right: 41 42
    fcn_body <str> (78)
        on left: 47 48 49 50 51 52 53 54 55 56 57
        on right: 40 41 42 51 52 53 54 55 56 57
    if_statement <str> (79)
        on left: 58 59
        on right: 11 54 60
    if_body <str> (80)
        on left: 60 61 62 63 64 65 66 67 68 69 70
        on right: 58 59 66 67 68 69 70
    while_statement <str> (81)
        on left: 71
        on right: 55 65 69
    expression <str> (82)
        on left: 72 73 74 75 76 77 78
        on right: 13 14 17 19 20 21 27 29 30 31 32 33 34 35 36 37 38 40 41 42 56
    operators <str> (83)
        on left: 79 80 81 82 83 84 85 86
        on right: 16 18 30 32 34 38


State 0

    0 $accept: • program_start $end
    1 program_start: ε •  [$end]
    2              | • program_body
    3 program_body: • full_expression DEL_QUEST
    4             | • program_body full_expression DEL_QUEST
    5             | • program_body full_expression KW_enddef DEL_QUEST
    6             | • program_body make_fcn DEL_QUEST
    7 full_expression: • constant
    8                | • declaration
    9                | • assignment
   10                | • fcn_call
   11                | • if_statement
   12 constant: • KW_const assignment var_type
   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   58 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_const   shift, and go to state 3
    KW_if      shift, and go to state 4
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    $default  reduce using rule 1 (program_start)

    program_start    go to state 11
    program_body     go to state 12
    full_expression  go to state 13
    constant         go to state 14
    assignment       go to state 15
    declaration      go to state 16
    fcn_call         go to state 17
    if_statement     go to state 18
    expression       go to state 19


State 1

   72 expression: T_ID •

    $default  reduce using rule 72 (expression)


State 2

   77 expression: KW_True •

    $default  reduce using rule 77 (expression)


State 3

   12 constant: KW_const • assignment var_type
   13 assignment: • expression OP_EQUAL kati
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    assignment  go to state 20
    expression  go to state 21


State 4

   58 if_statement: KW_if • DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | KW_if • DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif

    DEL_LPAR  shift, and go to state 22


State 5

   78 expression: KW_and •

    $default  reduce using rule 78 (expression)


State 6

   76 expression: KW_main •

    $default  reduce using rule 76 (expression)


State 7

   75 expression: KW_return •

    $default  reduce using rule 75 (expression)


State 8

   73 expression: T_INT •

    $default  reduce using rule 73 (expression)


State 9

   74 expression: T_STRING •

    $default  reduce using rule 74 (expression)


State 10

   28 fcn_call: DEL_LPAR • one_liner DEL_RPAR
   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    one_liner   go to state 23
    expression  go to state 24


State 11

    0 $accept: program_start • $end

    $end  shift, and go to state 25


State 12

    2 program_start: program_body •  [$end]
    4 program_body: program_body • full_expression DEL_QUEST
    5             | program_body • full_expression KW_enddef DEL_QUEST
    6             | program_body • make_fcn DEL_QUEST
    7 full_expression: • constant
    8                | • declaration
    9                | • assignment
   10                | • fcn_call
   11                | • if_statement
   12 constant: • KW_const assignment var_type
   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   40 make_fcn: • KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   41         | • KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   42         | • KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef
   58 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_const   shift, and go to state 3
    KW_if      shift, and go to state 4
    KW_and     shift, and go to state 5
    KW_def     shift, and go to state 26
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    $default  reduce using rule 2 (program_start)

    full_expression  go to state 27
    constant         go to state 14
    assignment       go to state 15
    declaration      go to state 16
    fcn_call         go to state 17
    make_fcn         go to state 28
    if_statement     go to state 18
    expression       go to state 19


State 13

    3 program_body: full_expression • DEL_QUEST

    DEL_QUEST  shift, and go to state 29


State 14

    7 full_expression: constant •

    $default  reduce using rule 7 (full_expression)


State 15

    9 full_expression: assignment •

    $default  reduce using rule 9 (full_expression)


State 16

    8 full_expression: declaration •  [KW_enddef, DEL_QUEST]
   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean

    DEL_COMMA  shift, and go to state 30
    DEL_DOTS   shift, and go to state 31

    $default  reduce using rule 8 (full_expression)

    var_type  go to state 32


State 17

   10 full_expression: fcn_call •

    $default  reduce using rule 10 (full_expression)


State 18

   11 full_expression: if_statement •

    $default  reduce using rule 11 (full_expression)


State 19

   13 assignment: expression • OP_EQUAL kati
   19 declaration: expression • var_type
   20            | expression • DEL_COMMA expression
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   27 fcn_call: expression • DEL_LPAR DEL_RPAR
   29         | expression • DEL_LPAR expression DEL_RPAR
   30         | expression • DEL_LPAR operators expression DEL_RPAR
   31         | expression • DEL_LPAR one_liner DEL_RPAR
   32         | expression • DEL_LPAR operators one_liner DEL_RPAR

    OP_EQUAL   shift, and go to state 33
    DEL_LPAR   shift, and go to state 34
    DEL_COMMA  shift, and go to state 35
    DEL_DOTS   shift, and go to state 31

    var_type  go to state 36


State 20

   12 constant: KW_const assignment • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean

    DEL_DOTS  shift, and go to state 31

    var_type  go to state 37


State 21

   13 assignment: expression • OP_EQUAL kati

    OP_EQUAL  shift, and go to state 33


State 22

   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   58 if_statement: KW_if DEL_LPAR • one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | KW_if DEL_LPAR • one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    one_liner   go to state 38
    expression  go to state 24


State 23

   28 fcn_call: DEL_LPAR one_liner • DEL_RPAR
   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 39
    DEL_RPAR   shift, and go to state 40
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 24

   33 one_liner: expression • expression
   34          | expression • operators
   35          | expression • DEL_COMMA
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    OP_PLUS    shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    OP_MUL     shift, and go to state 45
    OP_MOD     shift, and go to state 46
    OP_EQ      shift, and go to state 47
    OP_NOTEQ   shift, and go to state 48
    OP_LESS    shift, and go to state 49
    OP_EQUAL   shift, and go to state 50
    DEL_COMMA  shift, and go to state 51

    expression  go to state 52
    operators   go to state 53


State 25

    0 $accept: program_start $end •

    $default  accept


State 26

   40 make_fcn: KW_def • expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   41         | KW_def • expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   42         | KW_def • expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    expression  go to state 54


State 27

    4 program_body: program_body full_expression • DEL_QUEST
    5             | program_body full_expression • KW_enddef DEL_QUEST

    KW_enddef  shift, and go to state 55
    DEL_QUEST  shift, and go to state 56


State 28

    6 program_body: program_body make_fcn • DEL_QUEST

    DEL_QUEST  shift, and go to state 57


State 29

    3 program_body: full_expression DEL_QUEST •

    $default  reduce using rule 3 (program_body)


State 30

   21 declaration: declaration DEL_COMMA • expression
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    expression  go to state 58


State 31

   23 var_type: DEL_DOTS • KW_str
   24         | DEL_DOTS • KW_integer
   25         | DEL_DOTS • T_ID
   26         | DEL_DOTS • KW_boolean

    T_ID        shift, and go to state 59
    KW_integer  shift, and go to state 60
    KW_str      shift, and go to state 61
    KW_boolean  shift, and go to state 62


State 32

   22 declaration: declaration var_type •

    $default  reduce using rule 22 (declaration)


State 33

   13 assignment: expression OP_EQUAL • kati
   14 kati: • expression
   15     | • fcn_call
   16     | • operators
   17     | • kati expression
   18     | • kati operators fcn_call
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    OP_PLUS    shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    OP_MUL     shift, and go to state 45
    OP_MOD     shift, and go to state 46
    OP_EQ      shift, and go to state 47
    OP_NOTEQ   shift, and go to state 48
    OP_LESS    shift, and go to state 49
    OP_EQUAL   shift, and go to state 50
    DEL_LPAR   shift, and go to state 10

    kati        go to state 63
    fcn_call    go to state 64
    expression  go to state 65
    operators   go to state 66


State 34

   27 fcn_call: expression DEL_LPAR • DEL_RPAR
   29         | expression DEL_LPAR • expression DEL_RPAR
   30         | expression DEL_LPAR • operators expression DEL_RPAR
   31         | expression DEL_LPAR • one_liner DEL_RPAR
   32         | expression DEL_LPAR • operators one_liner DEL_RPAR
   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    OP_PLUS    shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    OP_MUL     shift, and go to state 45
    OP_MOD     shift, and go to state 46
    OP_EQ      shift, and go to state 47
    OP_NOTEQ   shift, and go to state 48
    OP_LESS    shift, and go to state 49
    OP_EQUAL   shift, and go to state 50
    DEL_RPAR   shift, and go to state 67

    one_liner   go to state 68
    expression  go to state 69
    operators   go to state 70


State 35

   20 declaration: expression DEL_COMMA • expression
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    expression  go to state 71


State 36

   19 declaration: expression var_type •

    $default  reduce using rule 19 (declaration)


State 37

   12 constant: KW_const assignment var_type •

    $default  reduce using rule 12 (constant)


State 38

   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   58 if_statement: KW_if DEL_LPAR one_liner • DEL_RPAR DEL_DOTS if_body KW_endif
   59             | KW_if DEL_LPAR one_liner • DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 39
    DEL_RPAR   shift, and go to state 72
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 39

   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   39          | one_liner DEL_LPAR • one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    one_liner   go to state 73
    expression  go to state 24


State 40

   28 fcn_call: DEL_LPAR one_liner DEL_RPAR •

    $default  reduce using rule 28 (fcn_call)


State 41

   36 one_liner: one_liner DEL_COMMA • expression
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    expression  go to state 74


State 42

   37 one_liner: one_liner expression •  [T_ID, KW_True, KW_and, KW_main, KW_return, T_INT, T_STRING, DEL_QUEST, DEL_LPAR, DEL_RPAR, DEL_COMMA]
   38          | one_liner expression • operators
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    OP_PLUS   shift, and go to state 43
    OP_MINUS  shift, and go to state 44
    OP_MUL    shift, and go to state 45
    OP_MOD    shift, and go to state 46
    OP_EQ     shift, and go to state 47
    OP_NOTEQ  shift, and go to state 48
    OP_LESS   shift, and go to state 49
    OP_EQUAL  shift, and go to state 50

    $default  reduce using rule 37 (one_liner)

    operators  go to state 75


State 43

   80 operators: OP_PLUS •

    $default  reduce using rule 80 (operators)


State 44

   79 operators: OP_MINUS •

    $default  reduce using rule 79 (operators)


State 45

   81 operators: OP_MUL •

    $default  reduce using rule 81 (operators)


State 46

   85 operators: OP_MOD •

    $default  reduce using rule 85 (operators)


State 47

   84 operators: OP_EQ •

    $default  reduce using rule 84 (operators)


State 48

   86 operators: OP_NOTEQ •

    $default  reduce using rule 86 (operators)


State 49

   83 operators: OP_LESS •

    $default  reduce using rule 83 (operators)


State 50

   82 operators: OP_EQUAL •

    $default  reduce using rule 82 (operators)


State 51

   35 one_liner: expression DEL_COMMA •

    $default  reduce using rule 35 (one_liner)


State 52

   33 one_liner: expression expression •

    $default  reduce using rule 33 (one_liner)


State 53

   34 one_liner: expression operators •

    $default  reduce using rule 34 (one_liner)


State 54

   40 make_fcn: KW_def expression • DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef
   41         | KW_def expression • DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef
   42         | KW_def expression • DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef

    DEL_LPAR  shift, and go to state 76


State 55

    5 program_body: program_body full_expression KW_enddef • DEL_QUEST

    DEL_QUEST  shift, and go to state 77


State 56

    4 program_body: program_body full_expression DEL_QUEST •

    $default  reduce using rule 4 (program_body)


State 57

    6 program_body: program_body make_fcn DEL_QUEST •

    $default  reduce using rule 6 (program_body)


State 58

   21 declaration: declaration DEL_COMMA expression •

    $default  reduce using rule 21 (declaration)


State 59

   25 var_type: DEL_DOTS T_ID •

    $default  reduce using rule 25 (var_type)


State 60

   24 var_type: DEL_DOTS KW_integer •

    $default  reduce using rule 24 (var_type)


State 61

   23 var_type: DEL_DOTS KW_str •

    $default  reduce using rule 23 (var_type)


State 62

   26 var_type: DEL_DOTS KW_boolean •

    $default  reduce using rule 26 (var_type)


State 63

   13 assignment: expression OP_EQUAL kati •  [KW_enddef, DEL_QUEST, DEL_DOTS]
   17 kati: kati • expression
   18     | kati • operators fcn_call
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    OP_PLUS    shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    OP_MUL     shift, and go to state 45
    OP_MOD     shift, and go to state 46
    OP_EQ      shift, and go to state 47
    OP_NOTEQ   shift, and go to state 48
    OP_LESS    shift, and go to state 49
    OP_EQUAL   shift, and go to state 50

    $default  reduce using rule 13 (assignment)

    expression  go to state 78
    operators   go to state 79


State 64

   15 kati: fcn_call •

    $default  reduce using rule 15 (kati)


State 65

   14 kati: expression •  [T_ID, KW_True, KW_and, KW_enddef, KW_main, KW_return, T_INT, T_STRING, OP_PLUS, OP_MINUS, OP_MUL, OP_MOD, OP_EQ, OP_NOTEQ, OP_LESS, OP_EQUAL, DEL_QUEST, DEL_DOTS]
   27 fcn_call: expression • DEL_LPAR DEL_RPAR
   29         | expression • DEL_LPAR expression DEL_RPAR
   30         | expression • DEL_LPAR operators expression DEL_RPAR
   31         | expression • DEL_LPAR one_liner DEL_RPAR
   32         | expression • DEL_LPAR operators one_liner DEL_RPAR

    DEL_LPAR  shift, and go to state 34

    $default  reduce using rule 14 (kati)


State 66

   16 kati: operators •

    $default  reduce using rule 16 (kati)


State 67

   27 fcn_call: expression DEL_LPAR DEL_RPAR •

    $default  reduce using rule 27 (fcn_call)


State 68

   31 fcn_call: expression DEL_LPAR one_liner • DEL_RPAR
   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 39
    DEL_RPAR   shift, and go to state 80
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 69

   29 fcn_call: expression DEL_LPAR expression • DEL_RPAR
   33 one_liner: expression • expression
   34          | expression • operators
   35          | expression • DEL_COMMA
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    OP_PLUS    shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    OP_MUL     shift, and go to state 45
    OP_MOD     shift, and go to state 46
    OP_EQ      shift, and go to state 47
    OP_NOTEQ   shift, and go to state 48
    OP_LESS    shift, and go to state 49
    OP_EQUAL   shift, and go to state 50
    DEL_RPAR   shift, and go to state 81
    DEL_COMMA  shift, and go to state 51

    expression  go to state 52
    operators   go to state 53


State 70

   30 fcn_call: expression DEL_LPAR operators • expression DEL_RPAR
   32         | expression DEL_LPAR operators • one_liner DEL_RPAR
   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    one_liner   go to state 82
    expression  go to state 83


State 71

   20 declaration: expression DEL_COMMA expression •

    $default  reduce using rule 20 (declaration)


State 72

   58 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR • DEL_DOTS if_body KW_endif
   59             | KW_if DEL_LPAR one_liner DEL_RPAR • DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif

    DEL_DOTS  shift, and go to state 84


State 73

   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   39          | one_liner DEL_LPAR one_liner • DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 39
    DEL_RPAR   shift, and go to state 85
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 74

   36 one_liner: one_liner DEL_COMMA expression •

    $default  reduce using rule 36 (one_liner)


State 75

   38 one_liner: one_liner expression operators •

    $default  reduce using rule 38 (one_liner)


State 76

   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   40 make_fcn: KW_def expression DEL_LPAR • DEL_RPAR DEL_DOTS fcn_body KW_enddef
   41         | KW_def expression DEL_LPAR • DEL_RPAR fcn_ret_type fcn_body KW_enddef
   42         | KW_def expression DEL_LPAR • fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef
   43 fcn_arguments: • declaration
   44              | • fcn_arguments declaration
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_RPAR   shift, and go to state 86

    declaration    go to state 87
    fcn_arguments  go to state 88
    expression     go to state 89


State 77

    5 program_body: program_body full_expression KW_enddef DEL_QUEST •

    $default  reduce using rule 5 (program_body)


State 78

   17 kati: kati expression •

    $default  reduce using rule 17 (kati)


State 79

   18 kati: kati operators • fcn_call
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    fcn_call    go to state 90
    expression  go to state 91


State 80

   31 fcn_call: expression DEL_LPAR one_liner DEL_RPAR •

    $default  reduce using rule 31 (fcn_call)


State 81

   29 fcn_call: expression DEL_LPAR expression DEL_RPAR •

    $default  reduce using rule 29 (fcn_call)


State 82

   32 fcn_call: expression DEL_LPAR operators one_liner • DEL_RPAR
   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 39
    DEL_RPAR   shift, and go to state 92
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 83

   30 fcn_call: expression DEL_LPAR operators expression • DEL_RPAR
   33 one_liner: expression • expression
   34          | expression • operators
   35          | expression • DEL_COMMA
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    OP_PLUS    shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    OP_MUL     shift, and go to state 45
    OP_MOD     shift, and go to state 46
    OP_EQ      shift, and go to state 47
    OP_NOTEQ   shift, and go to state 48
    OP_LESS    shift, and go to state 49
    OP_EQUAL   shift, and go to state 50
    DEL_RPAR   shift, and go to state 93
    DEL_COMMA  shift, and go to state 51

    expression  go to state 52
    operators   go to state 53


State 84

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   58 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   58             | KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS • if_body KW_endif
   59             | • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   59             | KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS • if_body KW_else DEL_DOTS if_body KW_endif
   60 if_body: • if_statement
   61        | • assignment DEL_QUEST
   62        | • declaration DEL_QUEST
   63        | • fcn_call DEL_QUEST
   64        | • KW_return one_liner DEL_QUEST
   65        | • while_statement DEL_QUEST
   66        | • if_body assignment DEL_QUEST
   67        | • if_body declaration DEL_QUEST
   68        | • if_body fcn_call DEL_QUEST
   69        | • if_body while_statement DEL_QUEST
   70        | • if_body KW_return one_liner DEL_QUEST
   71 while_statement: • KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_if      shift, and go to state 4
    KW_while   shift, and go to state 94
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 95
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment       go to state 96
    declaration      go to state 97
    fcn_call         go to state 98
    if_statement     go to state 99
    if_body          go to state 100
    while_statement  go to state 101
    expression       go to state 19


State 85

   39 one_liner: one_liner DEL_LPAR one_liner DEL_RPAR •

    $default  reduce using rule 39 (one_liner)


State 86

   40 make_fcn: KW_def expression DEL_LPAR DEL_RPAR • DEL_DOTS fcn_body KW_enddef
   41         | KW_def expression DEL_LPAR DEL_RPAR • fcn_ret_type fcn_body KW_enddef
   45 fcn_ret_type: • OP_MINUS OP_GREATER KW_integer DEL_DOTS
   46             | • OP_MINUS OP_GREATER KW_boolean DEL_DOTS

    OP_MINUS  shift, and go to state 102
    DEL_DOTS  shift, and go to state 103

    fcn_ret_type  go to state 104


State 87

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   43 fcn_arguments: declaration •  [T_ID, KW_True, KW_and, KW_main, KW_return, T_INT, T_STRING, DEL_RPAR]

    DEL_COMMA  shift, and go to state 30
    DEL_DOTS   shift, and go to state 31

    $default  reduce using rule 43 (fcn_arguments)

    var_type  go to state 32


State 88

   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   42 make_fcn: KW_def expression DEL_LPAR fcn_arguments • DEL_RPAR fcn_ret_type fcn_body KW_enddef
   44 fcn_arguments: fcn_arguments • declaration
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_RPAR   shift, and go to state 105

    declaration  go to state 106
    expression   go to state 89


State 89

   19 declaration: expression • var_type
   20            | expression • DEL_COMMA expression
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean

    DEL_COMMA  shift, and go to state 35
    DEL_DOTS   shift, and go to state 31

    var_type  go to state 36


State 90

   18 kati: kati operators fcn_call •

    $default  reduce using rule 18 (kati)


State 91

   27 fcn_call: expression • DEL_LPAR DEL_RPAR
   29         | expression • DEL_LPAR expression DEL_RPAR
   30         | expression • DEL_LPAR operators expression DEL_RPAR
   31         | expression • DEL_LPAR one_liner DEL_RPAR
   32         | expression • DEL_LPAR operators one_liner DEL_RPAR

    DEL_LPAR  shift, and go to state 34


State 92

   32 fcn_call: expression DEL_LPAR operators one_liner DEL_RPAR •

    $default  reduce using rule 32 (fcn_call)


State 93

   30 fcn_call: expression DEL_LPAR operators expression DEL_RPAR •

    $default  reduce using rule 30 (fcn_call)


State 94

   71 while_statement: KW_while • DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile

    DEL_LPAR  shift, and go to state 107


State 95

   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   64 if_body: KW_return • one_liner DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   75           | KW_return •  [OP_EQUAL, DEL_LPAR, DEL_COMMA, DEL_DOTS]
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    $default  reduce using rule 75 (expression)

    one_liner   go to state 108
    expression  go to state 24


State 96

   61 if_body: assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 109


State 97

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   62 if_body: declaration • DEL_QUEST

    DEL_QUEST  shift, and go to state 110
    DEL_COMMA  shift, and go to state 30
    DEL_DOTS   shift, and go to state 31

    var_type  go to state 32


State 98

   63 if_body: fcn_call • DEL_QUEST

    DEL_QUEST  shift, and go to state 111


State 99

   60 if_body: if_statement •

    $default  reduce using rule 60 (if_body)


State 100

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   58 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body • KW_endif
   59             | KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body • KW_else DEL_DOTS if_body KW_endif
   66 if_body: if_body • assignment DEL_QUEST
   67        | if_body • declaration DEL_QUEST
   68        | if_body • fcn_call DEL_QUEST
   69        | if_body • while_statement DEL_QUEST
   70        | if_body • KW_return one_liner DEL_QUEST
   71 while_statement: • KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_else    shift, and go to state 112
    KW_endif   shift, and go to state 113
    KW_while   shift, and go to state 94
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 114
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment       go to state 115
    declaration      go to state 116
    fcn_call         go to state 117
    while_statement  go to state 118
    expression       go to state 19


State 101

   65 if_body: while_statement • DEL_QUEST

    DEL_QUEST  shift, and go to state 119


State 102

   45 fcn_ret_type: OP_MINUS • OP_GREATER KW_integer DEL_DOTS
   46             | OP_MINUS • OP_GREATER KW_boolean DEL_DOTS

    OP_GREATER  shift, and go to state 120


State 103

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   40 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS • fcn_body KW_enddef
   47 fcn_body: • assignment DEL_QUEST
   48         | • declaration DEL_QUEST
   49         | • fcn_call DEL_QUEST
   50         | • KW_return one_liner DEL_QUEST
   51         | • fcn_body assignment DEL_QUEST
   52         | • fcn_body fcn_call DEL_QUEST
   53         | • fcn_body declaration DEL_QUEST
   54         | • fcn_body if_statement DEL_QUEST
   55         | • fcn_body while_statement DEL_QUEST
   56         | • fcn_body KW_return expression DEL_QUEST
   57         | • fcn_body KW_return one_liner DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 121
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment   go to state 122
    declaration  go to state 123
    fcn_call     go to state 124
    fcn_body     go to state 125
    expression   go to state 19


State 104

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   41 make_fcn: KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type • fcn_body KW_enddef
   47 fcn_body: • assignment DEL_QUEST
   48         | • declaration DEL_QUEST
   49         | • fcn_call DEL_QUEST
   50         | • KW_return one_liner DEL_QUEST
   51         | • fcn_body assignment DEL_QUEST
   52         | • fcn_body fcn_call DEL_QUEST
   53         | • fcn_body declaration DEL_QUEST
   54         | • fcn_body if_statement DEL_QUEST
   55         | • fcn_body while_statement DEL_QUEST
   56         | • fcn_body KW_return expression DEL_QUEST
   57         | • fcn_body KW_return one_liner DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 121
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment   go to state 122
    declaration  go to state 123
    fcn_call     go to state 124
    fcn_body     go to state 126
    expression   go to state 19


State 105

   42 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR • fcn_ret_type fcn_body KW_enddef
   45 fcn_ret_type: • OP_MINUS OP_GREATER KW_integer DEL_DOTS
   46             | • OP_MINUS OP_GREATER KW_boolean DEL_DOTS

    OP_MINUS  shift, and go to state 102

    fcn_ret_type  go to state 127


State 106

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   44 fcn_arguments: fcn_arguments declaration •  [T_ID, KW_True, KW_and, KW_main, KW_return, T_INT, T_STRING, DEL_RPAR]

    DEL_COMMA  shift, and go to state 30
    DEL_DOTS   shift, and go to state 31

    $default  reduce using rule 44 (fcn_arguments)

    var_type  go to state 32


State 107

   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   71 while_statement: KW_while DEL_LPAR • one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    one_liner   go to state 128
    expression  go to state 24


State 108

   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   64 if_body: KW_return one_liner • DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_QUEST  shift, and go to state 129
    DEL_LPAR   shift, and go to state 39
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 109

   61 if_body: assignment DEL_QUEST •

    $default  reduce using rule 61 (if_body)


State 110

   62 if_body: declaration DEL_QUEST •

    $default  reduce using rule 62 (if_body)


State 111

   63 if_body: fcn_call DEL_QUEST •

    $default  reduce using rule 63 (if_body)


State 112

   59 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else • DEL_DOTS if_body KW_endif

    DEL_DOTS  shift, and go to state 130


State 113

   58 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif •

    $default  reduce using rule 58 (if_statement)


State 114

   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   70 if_body: if_body KW_return • one_liner DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   75           | KW_return •  [OP_EQUAL, DEL_LPAR, DEL_COMMA, DEL_DOTS]
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    $default  reduce using rule 75 (expression)

    one_liner   go to state 131
    expression  go to state 24


State 115

   66 if_body: if_body assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 132


State 116

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   67 if_body: if_body declaration • DEL_QUEST

    DEL_QUEST  shift, and go to state 133
    DEL_COMMA  shift, and go to state 30
    DEL_DOTS   shift, and go to state 31

    var_type  go to state 32


State 117

   68 if_body: if_body fcn_call • DEL_QUEST

    DEL_QUEST  shift, and go to state 134


State 118

   69 if_body: if_body while_statement • DEL_QUEST

    DEL_QUEST  shift, and go to state 135


State 119

   65 if_body: while_statement DEL_QUEST •

    $default  reduce using rule 65 (if_body)


State 120

   45 fcn_ret_type: OP_MINUS OP_GREATER • KW_integer DEL_DOTS
   46             | OP_MINUS OP_GREATER • KW_boolean DEL_DOTS

    KW_integer  shift, and go to state 136
    KW_boolean  shift, and go to state 137


State 121

   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   50 fcn_body: KW_return • one_liner DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   75           | KW_return •  [OP_EQUAL, DEL_LPAR, DEL_COMMA, DEL_DOTS]
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    $default  reduce using rule 75 (expression)

    one_liner   go to state 138
    expression  go to state 24


State 122

   47 fcn_body: assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 139


State 123

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   48 fcn_body: declaration • DEL_QUEST

    DEL_QUEST  shift, and go to state 140
    DEL_COMMA  shift, and go to state 30
    DEL_DOTS   shift, and go to state 31

    var_type  go to state 32


State 124

   49 fcn_body: fcn_call • DEL_QUEST

    DEL_QUEST  shift, and go to state 141


State 125

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   40 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body • KW_enddef
   51 fcn_body: fcn_body • assignment DEL_QUEST
   52         | fcn_body • fcn_call DEL_QUEST
   53         | fcn_body • declaration DEL_QUEST
   54         | fcn_body • if_statement DEL_QUEST
   55         | fcn_body • while_statement DEL_QUEST
   56         | fcn_body • KW_return expression DEL_QUEST
   57         | fcn_body • KW_return one_liner DEL_QUEST
   58 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   71 while_statement: • KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_if      shift, and go to state 4
    KW_while   shift, and go to state 94
    KW_and     shift, and go to state 5
    KW_enddef  shift, and go to state 142
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 143
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment       go to state 144
    declaration      go to state 145
    fcn_call         go to state 146
    if_statement     go to state 147
    while_statement  go to state 148
    expression       go to state 19


State 126

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   41 make_fcn: KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body • KW_enddef
   51 fcn_body: fcn_body • assignment DEL_QUEST
   52         | fcn_body • fcn_call DEL_QUEST
   53         | fcn_body • declaration DEL_QUEST
   54         | fcn_body • if_statement DEL_QUEST
   55         | fcn_body • while_statement DEL_QUEST
   56         | fcn_body • KW_return expression DEL_QUEST
   57         | fcn_body • KW_return one_liner DEL_QUEST
   58 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   71 while_statement: • KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_if      shift, and go to state 4
    KW_while   shift, and go to state 94
    KW_and     shift, and go to state 5
    KW_enddef  shift, and go to state 149
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 143
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment       go to state 144
    declaration      go to state 145
    fcn_call         go to state 146
    if_statement     go to state 147
    while_statement  go to state 148
    expression       go to state 19


State 127

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   42 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type • fcn_body KW_enddef
   47 fcn_body: • assignment DEL_QUEST
   48         | • declaration DEL_QUEST
   49         | • fcn_call DEL_QUEST
   50         | • KW_return one_liner DEL_QUEST
   51         | • fcn_body assignment DEL_QUEST
   52         | • fcn_body fcn_call DEL_QUEST
   53         | • fcn_body declaration DEL_QUEST
   54         | • fcn_body if_statement DEL_QUEST
   55         | • fcn_body while_statement DEL_QUEST
   56         | • fcn_body KW_return expression DEL_QUEST
   57         | • fcn_body KW_return one_liner DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 121
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment   go to state 122
    declaration  go to state 123
    fcn_call     go to state 124
    fcn_body     go to state 150
    expression   go to state 19


State 128

   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   71 while_statement: KW_while DEL_LPAR one_liner • DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 39
    DEL_RPAR   shift, and go to state 151
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 129

   64 if_body: KW_return one_liner DEL_QUEST •

    $default  reduce using rule 64 (if_body)


State 130

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   58 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   59             | KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS • if_body KW_endif
   60 if_body: • if_statement
   61        | • assignment DEL_QUEST
   62        | • declaration DEL_QUEST
   63        | • fcn_call DEL_QUEST
   64        | • KW_return one_liner DEL_QUEST
   65        | • while_statement DEL_QUEST
   66        | • if_body assignment DEL_QUEST
   67        | • if_body declaration DEL_QUEST
   68        | • if_body fcn_call DEL_QUEST
   69        | • if_body while_statement DEL_QUEST
   70        | • if_body KW_return one_liner DEL_QUEST
   71 while_statement: • KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_if      shift, and go to state 4
    KW_while   shift, and go to state 94
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 95
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment       go to state 96
    declaration      go to state 97
    fcn_call         go to state 98
    if_statement     go to state 99
    if_body          go to state 152
    while_statement  go to state 101
    expression       go to state 19


State 131

   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   70 if_body: if_body KW_return one_liner • DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_QUEST  shift, and go to state 153
    DEL_LPAR   shift, and go to state 39
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 132

   66 if_body: if_body assignment DEL_QUEST •

    $default  reduce using rule 66 (if_body)


State 133

   67 if_body: if_body declaration DEL_QUEST •

    $default  reduce using rule 67 (if_body)


State 134

   68 if_body: if_body fcn_call DEL_QUEST •

    $default  reduce using rule 68 (if_body)


State 135

   69 if_body: if_body while_statement DEL_QUEST •

    $default  reduce using rule 69 (if_body)


State 136

   45 fcn_ret_type: OP_MINUS OP_GREATER KW_integer • DEL_DOTS

    DEL_DOTS  shift, and go to state 154


State 137

   46 fcn_ret_type: OP_MINUS OP_GREATER KW_boolean • DEL_DOTS

    DEL_DOTS  shift, and go to state 155


State 138

   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   50 fcn_body: KW_return one_liner • DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_QUEST  shift, and go to state 156
    DEL_LPAR   shift, and go to state 39
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 139

   47 fcn_body: assignment DEL_QUEST •

    $default  reduce using rule 47 (fcn_body)


State 140

   48 fcn_body: declaration DEL_QUEST •

    $default  reduce using rule 48 (fcn_body)


State 141

   49 fcn_body: fcn_call DEL_QUEST •

    $default  reduce using rule 49 (fcn_body)


State 142

   40 make_fcn: KW_def expression DEL_LPAR DEL_RPAR DEL_DOTS fcn_body KW_enddef •

    $default  reduce using rule 40 (make_fcn)


State 143

   33 one_liner: • expression expression
   34          | • expression operators
   35          | • expression DEL_COMMA
   36          | • one_liner DEL_COMMA expression
   37          | • one_liner expression
   38          | • one_liner expression operators
   39          | • one_liner DEL_LPAR one_liner DEL_RPAR
   56 fcn_body: fcn_body KW_return • expression DEL_QUEST
   57         | fcn_body KW_return • one_liner DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   75           | KW_return •  [OP_EQUAL, DEL_LPAR, DEL_COMMA, DEL_DOTS]
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9

    $default  reduce using rule 75 (expression)

    one_liner   go to state 157
    expression  go to state 158


State 144

   51 fcn_body: fcn_body assignment • DEL_QUEST

    DEL_QUEST  shift, and go to state 159


State 145

   21 declaration: declaration • DEL_COMMA expression
   22            | declaration • var_type
   23 var_type: • DEL_DOTS KW_str
   24         | • DEL_DOTS KW_integer
   25         | • DEL_DOTS T_ID
   26         | • DEL_DOTS KW_boolean
   53 fcn_body: fcn_body declaration • DEL_QUEST

    DEL_QUEST  shift, and go to state 160
    DEL_COMMA  shift, and go to state 30
    DEL_DOTS   shift, and go to state 31

    var_type  go to state 32


State 146

   52 fcn_body: fcn_body fcn_call • DEL_QUEST

    DEL_QUEST  shift, and go to state 161


State 147

   54 fcn_body: fcn_body if_statement • DEL_QUEST

    DEL_QUEST  shift, and go to state 162


State 148

   55 fcn_body: fcn_body while_statement • DEL_QUEST

    DEL_QUEST  shift, and go to state 163


State 149

   41 make_fcn: KW_def expression DEL_LPAR DEL_RPAR fcn_ret_type fcn_body KW_enddef •

    $default  reduce using rule 41 (make_fcn)


State 150

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   42 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body • KW_enddef
   51 fcn_body: fcn_body • assignment DEL_QUEST
   52         | fcn_body • fcn_call DEL_QUEST
   53         | fcn_body • declaration DEL_QUEST
   54         | fcn_body • if_statement DEL_QUEST
   55         | fcn_body • while_statement DEL_QUEST
   56         | fcn_body • KW_return expression DEL_QUEST
   57         | fcn_body • KW_return one_liner DEL_QUEST
   58 if_statement: • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_endif
   59             | • KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif
   71 while_statement: • KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_if      shift, and go to state 4
    KW_while   shift, and go to state 94
    KW_and     shift, and go to state 5
    KW_enddef  shift, and go to state 164
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 143
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment       go to state 144
    declaration      go to state 145
    fcn_call         go to state 146
    if_statement     go to state 147
    while_statement  go to state 148
    expression       go to state 19


State 151

   71 while_statement: KW_while DEL_LPAR one_liner DEL_RPAR • DEL_DOTS KW_endwhile

    DEL_DOTS  shift, and go to state 165


State 152

   13 assignment: • expression OP_EQUAL kati
   19 declaration: • expression var_type
   20            | • expression DEL_COMMA expression
   21            | • declaration DEL_COMMA expression
   22            | • declaration var_type
   27 fcn_call: • expression DEL_LPAR DEL_RPAR
   28         | • DEL_LPAR one_liner DEL_RPAR
   29         | • expression DEL_LPAR expression DEL_RPAR
   30         | • expression DEL_LPAR operators expression DEL_RPAR
   31         | • expression DEL_LPAR one_liner DEL_RPAR
   32         | • expression DEL_LPAR operators one_liner DEL_RPAR
   59 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body • KW_endif
   66 if_body: if_body • assignment DEL_QUEST
   67        | if_body • declaration DEL_QUEST
   68        | if_body • fcn_call DEL_QUEST
   69        | if_body • while_statement DEL_QUEST
   70        | if_body • KW_return one_liner DEL_QUEST
   71 while_statement: • KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_endif   shift, and go to state 166
    KW_while   shift, and go to state 94
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 114
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_LPAR   shift, and go to state 10

    assignment       go to state 115
    declaration      go to state 116
    fcn_call         go to state 117
    while_statement  go to state 118
    expression       go to state 19


State 153

   70 if_body: if_body KW_return one_liner DEL_QUEST •

    $default  reduce using rule 70 (if_body)


State 154

   45 fcn_ret_type: OP_MINUS OP_GREATER KW_integer DEL_DOTS •

    $default  reduce using rule 45 (fcn_ret_type)


State 155

   46 fcn_ret_type: OP_MINUS OP_GREATER KW_boolean DEL_DOTS •

    $default  reduce using rule 46 (fcn_ret_type)


State 156

   50 fcn_body: KW_return one_liner DEL_QUEST •

    $default  reduce using rule 50 (fcn_body)


State 157

   36 one_liner: one_liner • DEL_COMMA expression
   37          | one_liner • expression
   38          | one_liner • expression operators
   39          | one_liner • DEL_LPAR one_liner DEL_RPAR
   57 fcn_body: fcn_body KW_return one_liner • DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    DEL_QUEST  shift, and go to state 167
    DEL_LPAR   shift, and go to state 39
    DEL_COMMA  shift, and go to state 41

    expression  go to state 42


State 158

   33 one_liner: expression • expression
   34          | expression • operators
   35          | expression • DEL_COMMA
   56 fcn_body: fcn_body KW_return expression • DEL_QUEST
   72 expression: • T_ID
   73           | • T_INT
   74           | • T_STRING
   75           | • KW_return
   76           | • KW_main
   77           | • KW_True
   78           | • KW_and
   79 operators: • OP_MINUS
   80          | • OP_PLUS
   81          | • OP_MUL
   82          | • OP_EQUAL
   83          | • OP_LESS
   84          | • OP_EQ
   85          | • OP_MOD
   86          | • OP_NOTEQ

    T_ID       shift, and go to state 1
    KW_True    shift, and go to state 2
    KW_and     shift, and go to state 5
    KW_main    shift, and go to state 6
    KW_return  shift, and go to state 7
    T_INT      shift, and go to state 8
    T_STRING   shift, and go to state 9
    OP_PLUS    shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    OP_MUL     shift, and go to state 45
    OP_MOD     shift, and go to state 46
    OP_EQ      shift, and go to state 47
    OP_NOTEQ   shift, and go to state 48
    OP_LESS    shift, and go to state 49
    OP_EQUAL   shift, and go to state 50
    DEL_QUEST  shift, and go to state 168
    DEL_COMMA  shift, and go to state 51

    expression  go to state 52
    operators   go to state 53


State 159

   51 fcn_body: fcn_body assignment DEL_QUEST •

    $default  reduce using rule 51 (fcn_body)


State 160

   53 fcn_body: fcn_body declaration DEL_QUEST •

    $default  reduce using rule 53 (fcn_body)


State 161

   52 fcn_body: fcn_body fcn_call DEL_QUEST •

    $default  reduce using rule 52 (fcn_body)


State 162

   54 fcn_body: fcn_body if_statement DEL_QUEST •

    $default  reduce using rule 54 (fcn_body)


State 163

   55 fcn_body: fcn_body while_statement DEL_QUEST •

    $default  reduce using rule 55 (fcn_body)


State 164

   42 make_fcn: KW_def expression DEL_LPAR fcn_arguments DEL_RPAR fcn_ret_type fcn_body KW_enddef •

    $default  reduce using rule 42 (make_fcn)


State 165

   71 while_statement: KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS • KW_endwhile

    KW_endwhile  shift, and go to state 169


State 166

   59 if_statement: KW_if DEL_LPAR one_liner DEL_RPAR DEL_DOTS if_body KW_else DEL_DOTS if_body KW_endif •

    $default  reduce using rule 59 (if_statement)


State 167

   57 fcn_body: fcn_body KW_return one_liner DEL_QUEST •

    $default  reduce using rule 57 (fcn_body)


State 168

   56 fcn_body: fcn_body KW_return expression DEL_QUEST •

    $default  reduce using rule 56 (fcn_body)


State 169

   71 while_statement: KW_while DEL_LPAR one_liner DEL_RPAR DEL_DOTS KW_endwhile •

    $default  reduce using rule 71 (while_statement)
